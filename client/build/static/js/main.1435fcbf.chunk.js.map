{"version":3,"sources":["components/i18n.js","_actions/types.js","components/Config.js","_actions/user_actions.js","hoc/auth.js","components/views/LandingPage/Sections/StyledSpinner.js","components/views/LandingPage/Sections/Spinner.js","components/views/LandingPage/Sections/MainImage.js","components/commons/GridCards.js","components/views/LandingPage/Sections/StyledSearchBar.js","components/views/LandingPage/Sections/SearchBar.js","components/views/LandingPage/Sections/hooks/useFetchMovies.js","components/views/LandingPage/LandingPage.js","components/views/GenresPage/GenresPage.js","components/views/GenresPage/hooks/useFetchByGenre.js","components/views/LoginPage/LoginPage.js","components/views/RegisterPage/RegisterPage.js","components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/Sections/RightMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/MovieDetail/style.js","components/views/MovieDetail/Sections/LikeDislikes.js","components/views/MovieDetail/Sections/SingleComment.js","components/views/MovieDetail/Sections/ReplyComment.js","components/views/MovieDetail/Sections/Comments.js","components/views/MovieDetail/Sections/Favorite.js","components/views/MovieDetail/Sections/MovieInfo.js","components/views/MovieDetail/Sections/Recommended.js","components/views/MovieDetail/Sections/Similar.js","components/views/MovieDetail/MovieDetail.js","components/views/FavoritePage/FavoritePage.js","components/views/ProfilePage/ResetPass.js","components/views/ProfilePage/ProfilePage.js","components/views/Confirmation/Confirmation.js","components/views/ResetPassword/ResetPassword.js","components/views/ResetPassword/Reset.js","components/views/UsersPage/UsersPage.js","components/NotFound.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["language","localStorage","getItem","i18n","use","Backend","initReactI18next","init","lng","fallbackLng","whitelist","backend","loadPath","debug","interpolation","escapeValue","LOGIN_USER","REGISTER_USER","UPDATE_USER","AUTH_USER","LOGOUT_USER","USER_SERVER","API_URL","API_KEY","CurrentLanguage","IMAGE_BASE_URL","IMAGE_SIZE","POSTER_SIZE","headers","auth","request","axios","get","then","response","data","type","payload","foo","ComposedClass","reload","AuthenticationCheck","props","user","useSelector","state","dispatch","useDispatch","useEffect","a","isAuth","history","push","StyledSpinner","styled","div","Spinner","Title","Typography","MainImage","landing","genre","style","background","image","height","backgroundSize","backgroundPosition","backgroundPositionY","width","position","backgroundColor","borderRadius","padding","maxWidth","bottom","marginLeft","color","level","genreName","GridCards","t","useTranslation","actor","movie","movieId","movieName","actorName","charName","date","vote","movieGenre","VoteColors","BadgeColor","score","getScoreColor","undefined","lg","md","xs","display","justifyContent","alignItems","hoverable","alt","cover","src","textAlign","fontWeight","offset","count","className","onClick","window","location","href","moment","Date","format","StyledSearchBar","StyledSearchBarContent","SearchBar","callback","useState","setState","timeOut","useRef","doSearch","event","value","target","clearTimeout","current","setTimeout","SearchOutlined","fontSize","placeholder","onChange","LandingPage","Movies","item","setItem","loading","setLoading","error","setError","year","setYear","sort","setSort","min","max","rating","setRating","yearRange","setYearRange","genreID","setGenreID","selectEl","selectElPop","fetchMovies","endpoint","isLoadMore","search","fetch","json","result","prev","results","CurrentPage","page","totalPages","total_pages","getFullYear","yyyy","toString","mm","getMonth","dd","getDate","mmChars","split","ddChars","convertDate","useFetchMovies","makeItYear","makeItSort","onRatingSliderChange","onYearRangeSliderChange","handleGenre","clearFilters","searchTerm","setSearchTerm","toggle","setToggle","buttonRef","addEventListener","handleScroll","genres","id","name","e","windowHeight","innerHeight","document","documentElement","offsetHeight","body","html","docHeight","Math","scrollHeight","clientHeight","pageYOffset","click","pickYear","MovieIcon","createFromIconfontCN","scriptUrl","flexDirection","margin","shape","gutter","span","ref","paddingRight","maxValue","minValue","Array","from","i","map","size","borderColor","Fragment","index","poster_path","release_date","vote_count","imdb_id","backdrop_path","overview","title","vote_average","genre_ids","length","to","slice","popularEndpoint","searchEndpoint","GenresPage","useParams","genreId","useHistory","fetchMoviesByGenre","goBack","randomIndex","floor","random","MainMovieImage","console","useFetchByGenre","handleClick","genresEndpoint","withRouter","rememberMeChecked","formErrorMessage","setFormErrorMessage","rememberMe","setRememberMe","handleRememberMe","initialUsername","initialValues","username","password","validationSchema","Yup","required","onSubmit","values","setSubmitting","dataToSubmit","post","loginUser","loginSuccess","userId","removeItem","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","Item","prefix","UserOutlined","onBlur","LockOutlined","autoComplete","border","checked","float","htmlType","minWidth","disabled","formItemLayout","labelCol","sm","wrapperCol","tailFormItemLayout","RegisterPage","setImage","React","content","setContent","imageInputRef","allowedTypes","uploadImage","preventDefault","files","url","extension","replace","toLowerCase","indexOf","message","fd","FormData","append","res","resize","secure_url","splice","img","Image","join","status","email","firstName","lastName","confirmPassword","matches","oneOf","registerUser","success","store","addNotification","insert","container","animationIn","animationOut","dismiss","duration","onScreen","alert","label","hasFeedback","validateStatus","cpassword","accept","PopcornIcon","LeftMenu","userData","mode","useStyles","makeStyles","theme","formControl","selectEmpty","marginTop","spacing","classes","changeLanguage","Username","setUsername","mounted","setMounted","fetchUsername","GroupIcon","LoginOutlined","UserAddOutlined","FormControl","Select","displayEmpty","autoWidth","disableUnderline","IconComponent","inputProps","MenuItem","LogoutOutlined","NavBar","visible","setVisible","zIndex","AlignRightOutlined","placement","closable","onClose","Footer","playerWrapper","paddingTop","reactPlayer","top","left","buttonChooseSource","buttonActors","loadingSources","marginRight","movieContainer","paddingBottom","backdrop","backgroundImage","backdropImage","objectFit","poster","boxShadow","releaseDate","genreList","listStyle","flexWrap","cursor","subtitle","marginBottom","crewList","LikeDislikes","Likes","setLikes","Dislikes","setDislikes","variable","video","videoId","commentId","Axios","likes","dislikes","LikeTwoTone","twoToneColor","up","paddingLeft","DislikeTwoTone","Meta","Card","SendIcon","TextArea","Input","SingleComment","CommentValue","setCommentValue","OpenReply","setOpenReply","str","variables","writer","_id","postId","responseTo","comment","refreshFunction","actions","showModal","handleCancel","author","avatar","datetime","onCancel","footer","currentTarget","ReplyComment","parentCommentId","ChildCommentNumber","setChildCommentNumber","OpenReplyComments","setOpenReplyComments","commentNumber","CommentLists","forEach","Comments","Comment","setComment","CommentOutlined","movieTitle","PopcornColorIcon","Favorite","userFrom","movieInfo","moviePost","movieRunTime","runtime","FavoriteNumber","setFavoriteNumber","Favorited","setFavorited","subscribeNumber","log","subcribed","MovieInfo","directors","cast","trailer","MovieInfoIcon","videoArray","embedLink","key","stopVideo","youtubeLink","Container","Grid","variant","component","element","iterator","pathname","YoutubeOutlined","frameBorder","sameSite","Secure","allow","allowFullScreen","time","hours","mins","calcTime","original_title","production_companies","company","shift","substring","budget","numeral","revenue","RecommendedMovies","urlParams","this","data_arr","Component","withTranslation","SimilarMovies","MovieDetailPage","match","params","Movie","setMovie","Directors","setDirectors","Trailer","setTrailer","Casts","setCasts","setCommentLists","LoadingForMovie","setLoadingForMovie","LoadingForCasts","setLoadingForCasts","ActorToggle","setActorToggle","StreamTitleIcon","_mounted","endpointForMovieInfo","status_code","endpointForCasts","endpointTrailer","videoLang","crew","filter","member","job","comments","Button","profile_path","character","newComment","concat","Recommended","Similar","FavoritePage","Favorites","setFavorites","Loading","fetchFavoredMovie","favorites","renderCards","favorite","ClockCircleOutlined","onClickDelete","DeleteOutlined","ResetPass","password_confirm","ProfilePage","UserID","setUserID","users","info","lang","updateUser","defaultValue","ForgotPassword","tokenConf","activeAccount","loginContainer","paper","login","signupButton","textfield","form","err_email","validationErrors","setValidationErrors","setValue","validateEmail","test","String","handleMailSend","err_mail","Grow","in","noValidate","alignContent","TextField","fullWidth","Boolean","helperText","justify","Link","forgotContainer","ResetPassword","err_password","err_password_confirm","fieldValue","setTextFieldsValues","handleResetClicked","API","UsersPage","UserList","setUserList","NotFound","App","fallback","minHeight","exact","path","Auth","LoginPage","MovieDetail","ResPassword","Confirmation","Reset","hostname","rootReducer","combineReducers","action","register","update","loginSucces","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","render","Reducer","__REDUX_DEVTOOLS_EXTENSION__","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1435fcbf.chunk.js","sourcesContent":["import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-xhr-backend';\n\nlet language = localStorage.getItem('language');\nif (!language) {\n  language = \"en-US\";\n}\n\ni18n\n  // load translation using xhr -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-xhr-backend\n  .use(Backend)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    lng: language,\n    fallbackLng: 'en-US',\n    whitelist: ['en-US', 'fr-FR'],\n    backend: {\n      loadPath: '/locales/{{lng}}/{{ns}}.json'\n    },\n    debug: false,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const UPDATE_USER = 'update_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n\nexport const API_URL = 'https://api.themoviedb.org/3/';\nexport const API_KEY = '844dba0bfd8f3a4f3799f6130ef9e335';\nexport const CurrentLanguage = localStorage.getItem('language');\n\nexport const IMAGE_BASE_URL ='https://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nexport const BACKDROP_SIZE = 'w1280'\nexport const IMAGE_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nexport const POSTER_SIZE = 'w500'","import axios from 'axios';\n\nimport {\n    LOGIN_USER,\n    REGISTER_USER,\n    UPDATE_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\nconst headers = { 'Content-Type': 'application/json' };\n\nexport function registerUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/register`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\nexport function updateUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/update`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: UPDATE_USER,\n        payload: request\n    }\n}\n\nexport function resetPasswordProfile(password, password_confirm){\n    \n    return axios.post(`${USER_SERVER}/updatePassword`,\n        {password, password_confirm },\n        { headers: headers }\n    )\n}\n\nexport function confirmation(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/confirmation`,dataToSubmit)\n        .then(response => response.data);\n    \n    return {\n        type: REGISTER_USER,\n        payload: request\n    }\n}\nexport function sendResetMail(email){\n    return axios.post(`${USER_SERVER}/forgotPassword`,{email},\n    { headers: headers }\n    )\n}\nexport function resetPassword(tokenConf, password, password_confirm){\n    \n    return axios.post(`${USER_SERVER}/reset/${tokenConf}`,\n        {tokenConf, password, password_confirm},\n        { headers: headers }\n    )\n}\n\nexport function activeAccount(tokenConf){\n    return axios.get(`${USER_SERVER}/confirmation/${tokenConf}`,\n    { headers: headers } \n    )\n}\n\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function foo(ComposedClass, reload = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n\n            dispatch(auth()).then(async response => {\n                if (await !response.payload.isAuth) {\n                    if (reload) {\n                        props.history.push('/login')\n                    }\n                } else {\n                        if (reload === false) {\n                            props.history.push('/landing')\n                        }\n                }\n            })\n\n        }, [dispatch, props.history])\n\n        return (\n            <ComposedClass {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import styled from 'styled-components';\n\nexport const StyledSpinner = styled.div`\n  border: 4px solid #757575; /* grey */\n  border-top: 5px solid #19ba90; /* Blixbox green */\n  border-radius: 50%;\n  width: 55px;\n  height: 55px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\nexport default StyledSpinner","import React from 'react'\nimport StyledSpinner from './StyledSpinner'\n\nconst Spinner = () => <StyledSpinner />\n\nexport default Spinner","import React from 'react'\nimport { Typography } from 'antd';\nconst { Title } = Typography;\n\nfunction MainImage(props) {\n\n    let { landing, genre } = props\n    if (landing) {\n        return (\n            <div\n                style={{\n                    background:\n                        `linear-gradient(to bottom, rgba(0,0,0,0)\n            39%,rgba(0,0,0,0)\n            41%,rgba(0,0,0,0.65)\n            100%),\n            url('${props.image}'), #1c1c1c`,\n                    // height: '500px',\n                    height: '400px',\n                    backgroundSize: '100%, cover',\n                    backgroundPosition: 'center, center',\n                    backgroundPositionY: '9px',\n                    width: '100%',\n                    position: 'relative'\n                }}\n            >\n            </div>\n        )\n    } else {\n        if (genre) {\n            return (\n                <div\n                    style={{\n                        background:\n                            `linear-gradient(to bottom, rgba(0,0,0,0)\n            39%,rgba(0,0,0,0)\n            41%,rgba(0,0,0,0.65)\n            100%),\n            url('${props.image}'), #1c1c1c`,\n                        // height: '500px',\n                        height: '400px',\n                        backgroundSize: '100%, cover',\n                        backgroundPosition: 'center, center',\n                        backgroundPositionY: '9px',\n                        width: '100%',\n                        position: 'relative'\n                    }}\n                >\n                    <div>\n                        <div style={{ backgroundColor: 'rgba(0, 0, 0, 0.5)', borderRadius: '10px', padding: '10px', position: 'absolute', maxWidth: '500px', bottom: '2rem', marginLeft: '2rem' }} >\n                            <Title style={{ color: 'white' }} level={2} > {props.genreName}</Title>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default MainImage\n","import React from 'react'\nimport { Col, Card, Badge } from 'antd';\nimport { IMAGE_BASE_URL } from '../Config';\nimport moment from 'moment';\nimport { useTranslation } from 'react-i18next';\n\nfunction GridCards(props) {\n\n    const { t } = useTranslation();\n    let { actor, movie, image, movieId, movieName, actorName, charName, date, vote, movieGenre } = props\n    const POSTER_SIZE = \"w154\";\n\n    const VoteColors = {\n        UNKNOWN: '#999',\n        BAD: '#cd5c5c',\n        OK: '#ffa500',\n        EXCELLENT: '#52c41a'\n    }\n\n    function getScoreColor(score) {\n        let color = VoteColors.EXCELLENT\n        if (!score || vote === 0) color = VoteColors.UNKNOWN\n        else if (score < 5.5) color = VoteColors.BAD\n        else if (score < 7) color = VoteColors.OK\n\n        return color\n    }\n\n    const BadgeColor = getScoreColor(vote)\n\n    const imageClick = () => {\n        return (window.location.href = \"/movie/\" + movieId)\n    }\n\n    if (actor !== undefined) {\n        return (\n            <Col lg={4} md={6} xs={24}>\n                <div style={{ position: 'relative', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    <Card\n                        hoverable\n                        style={{ width: '100%' }}\n                        alt={movieName}\n                        cover={<img alt={actorName} src={image ? `${IMAGE_BASE_URL}${POSTER_SIZE}${image}` : 'https://res.cloudinary.com/dkyqbngya/image/upload/v1586537514/twdjio2duy8ebxulqwti.png'} />}\n                    >\n                        <h3 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>{actorName}</h3>\n                        <h5 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>{charName}</h5>\n                    </Card>\n                </div>\n            </Col>\n        )\n    } else {\n        if (movie !== undefined) {\n            return (\n                <Col lg={4} md={6} xs={24}>\n                    <div style={{ position: 'relative' }}>\n                        <Badge\n                            style={{ backgroundColor: BadgeColor }}\n                            offset={[-15, 15]}\n                            count={vote}>\n                                <Card className=\"posterCard\"\n                                    hoverable\n                                    style={{ width: '100%', height: '100%' }}\n                                    alt={movieName}\n                                    cover={<img onClick={() => imageClick()} alt={movieName} src={image ? `${image}` : t('landing.notAvail')} />}\n                                >\n                                    <a style={{ color: \"black\" }} href={`/movie/${movieId}`} ><div style={{ textAlign: \"center\", fontWeight: \"bold\" }}>{movieName} ({date ? moment(new Date(date)).format('YYYY') : 'N/A'})</div></a>\n                                    <br />\n                                    <div style={{ textAlign: \"center\" }}>{movieGenre}</div>\n                                </Card>\n                            </Badge>\n                    </div>\n                </Col>\n            )\n        }\n    }\n\n}\n\nexport default GridCards\n","import styled from 'styled-components';\n\nexport const StyledSearchBar = styled.div`\n  width: 100%;\n  height: 105px;\n  background: white;\n  padding: 25px 20px 0px 20px;\n  box-sizing: border-box;\n  color: black;\n`;\n\nexport const StyledSearchBarContent = styled.div`\n  max-width: 1280px;\n  width: 100%;\n  height: 55px;\n  background: white;\n  margin: 0 auto;\n  border-radius: 40px;\n  border: solid 0.5px black;\n  position: relative;\n  color: black;\n\n  .fa-search {\n    position: absolute;\n    left: 20px;\n    top: 12px;\n    color: black;\n    z-index: auto;\n  }\n\n  input {\n    font-family: 'Abel', sans-serif;\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: black;\n    box-sizing: border-box;\n\n    :focus {\n      outline: none;\n    }\n\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;\n\nexport default StyledSearchBar","import React, { useState, useRef } from 'react'\nimport { StyledSearchBar, StyledSearchBarContent } from './StyledSearchBar'\nimport { SearchOutlined } from '@ant-design/icons';\nimport PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\n\nconst SearchBar = ({ callback }) => {\n\n  const { t } = useTranslation();\n  const [state, setState] = useState('')\n  const timeOut = useRef(null)\n  //controlled component\n\n  const doSearch = event => {\n    // console.log(event.target.value)\n    const { value } = event.target\n\n    clearTimeout(timeOut.current)\n    setState(value)\n\n    timeOut.current = setTimeout(() => {\n      callback(value)\n    }, 500)\n  }\n\n  return (\n    <StyledSearchBar>\n      <StyledSearchBarContent>\n        <SearchOutlined className=\"fa-search\" style={{ fontSize: '30px' }} />\n        <input\n          type=\"text\"\n          className=\"large\"\n          placeholder={t('landing.search')}\n          onChange={doSearch}\n          value={state}\n        />\n        <input\n          type=\"text\"\n          className=\"small\"\n          placeholder={t('landing.searchSmall')}\n          onChange={doSearch}\n          value={state}\n        />\n      </StyledSearchBarContent>\n    </StyledSearchBar>\n  )\n}\n\nSearchBar.propTypes = {\n  callback: PropTypes.func,\n}\nexport default SearchBar","import { useState, useEffect, useRef } from 'react'\nimport { API_URL, API_KEY } from '../../../../Config'\n\nconst CurrentLanguage = localStorage.getItem('language');\n\nconst date = new Date();\n\nfunction convertDate(date) {\n  const yyyy = date.getFullYear().toString();\n  const mm = (date.getMonth() + 1).toString();\n  const dd = date.getDate().toString();\n\n  const mmChars = mm.split('');\n  const ddChars = dd.split('');\n\n  return yyyy + '-' + (mmChars[1] ? mm : \"0\" + mmChars[0]) + '-' + (ddChars[1] ? dd : \"0\" + ddChars[0]);\n}\n\n//custom hook\nexport const useFetchMovies = () => {\n  const [item, setItem] = useState({ Movies: [] })\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [year, setYear] = useState('')\n  const [sort, setSort] = useState('popularity.desc')\n  const [rating, setRating] = useState({ min: 0, max: 10 });\n  const [yearRange, setYearRange] = useState({ min: 1980, max: 2020 });\n  const [genreID, setGenreID] = useState([]);\n  const selectEl = useRef(null);\n  const selectElPop = useRef(null);\n\n  const fetchMovies = async endpoint => {\n    setError(false)\n    setLoading(true)\n\n    const isLoadMore = endpoint.search('page')\n    try {\n      const result = await (await fetch(endpoint)).json()\n\n      setItem(prev => ({\n        ...prev,\n        Movies:\n          isLoadMore !== -1\n            ? [...prev.Movies, ...result.results]\n            : [...result.results],\n        CurrentPage: result.page,\n        totalPages: result.total_pages,\n      }))\n    } catch (error) {\n      setError(true)\n    }\n    setLoading(false)\n  }\n\n  const makeItYear = (event) => {\n    setYearRange({ min: 1980, max: 2020 })\n    setYear(event.target.value)\n    setLoading(false);\n  }\n\n  const makeItSort = (event) => {\n    setSort(event.target.value)\n    setLoading(false);\n  }\n\n  const onRatingSliderChange = (value) => {\n    setSort('popularity.desc')\n    setRating(value);\n    setLoading(false);\n  };\n\n  const onYearRangeSliderChange = (value) => {\n    setYear('');\n    selectEl.current.value = '';\n    setYearRange(value);\n    setLoading(false);\n  };\n\n\n  const handleGenre = (event) => {\n    setGenreID(event.target.value);\n    setLoading(false);\n  };\n\n  const clearFilters = () => {\n    selectEl.current.value = '';\n    selectElPop.current.value = 'popularity.desc';\n    setYear('')\n    setGenreID('')\n    setRating({ min: 0, max: 10 })\n    setYearRange({ min: 1980, max: 2020 })\n    setSort('popularity.desc')\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    const CurrentLanguage = localStorage.getItem('language');\n    fetchMovies(`${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&vote_count.gte=2500&sort_by=${sort}&primary_release_year=${year}&vote_average.gte=${rating.min}&vote_average.lte=${rating.max}&primary_release_date.gte=${yearRange.min}-01-01&primary_release_date.lte=${yearRange.max === date.getFullYear() ? convertDate(date) : yearRange.max + '-12-31'}&with_genres=${genreID}`)\n// eslint-disable-next-line \n  }, [CurrentLanguage, year, sort, rating.min, rating.max, yearRange.min, yearRange.max, genreID])\n\n  return [{ item, loading, error, year, sort, rating, yearRange, genreID, selectEl, selectElPop }, fetchMovies, makeItYear, makeItSort, onRatingSliderChange, onYearRangeSliderChange, handleGenre, clearFilters]\n}","import React, { useState, useEffect, useRef } from 'react'\nimport { Typography, Row, Col, Button, Divider } from 'antd';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, CurrentLanguage } from '../../Config'\nimport MainImage from './Sections/MainImage'\nimport GridCard from '../../commons/GridCards'\nimport { useTranslation } from 'react-i18next';\nimport SearchBar from './Sections/SearchBar';\nimport Spinner from './Sections/Spinner';\nimport { Link } from 'react-router-dom';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport InputRange from \"react-input-range\";\n\n//custom hook\nimport { useFetchMovies } from './Sections/hooks/useFetchMovies'\n\nconst { Title } = Typography;\n\nconst date = new Date();\n\nconst LandingPage = () => {\n\n    const [\n        { item: { Movies, CurrentPage, totalPages },\n            loading,\n            error,\n            year,\n            sort,\n            rating,\n            yearRange,\n            genreID,\n            selectEl,\n            selectElPop\n        },\n        fetchMovies,\n        makeItYear,\n        makeItSort,\n        onRatingSliderChange,\n        onYearRangeSliderChange,\n        handleGenre,\n        clearFilters\n    ] = useFetchMovies()\n    const [searchTerm, setSearchTerm] = useState('');\n    const [toggle, setToggle] = useState(false);\n    const buttonRef = useRef(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n    }, [])\n\n    function convertDate(date) {\n        const yyyy = date.getFullYear().toString();\n        const mm = (date.getMonth() + 1).toString();\n        const dd = date.getDate().toString();\n\n        const mmChars = mm.split('');\n        const ddChars = dd.split('');\n\n        return yyyy + '-' + (mmChars[1] ? mm : \"0\" + mmChars[0]) + '-' + (ddChars[1] ? dd : \"0\" + ddChars[0]);\n    }\n\n    const genres = [\n        { id: 28, name: t('genre.Action') },\n        { id: 12, name: t('genre.Adventure') },\n        { id: 16, name: t('genre.Animation') },\n        { id: 35, name: t('genre.Comedy') },\n        { id: 80, name: t('genre.Crime') },\n        { id: 99, name: t('genre.Documentary') },\n        { id: 18, name: t('genre.Drama') },\n        { id: 10751, name: t('genre.Family') },\n        { id: 14, name: t('genre.Fantasy') },\n        { id: 36, name: t('genre.History') },\n        { id: 27, name: t('genre.Horror') },\n        { id: 10402, name: t('genre.Music') },\n        { id: 9648, name: t('genre.Mystery') },\n        { id: 10749, name: t('genre.Romance') },\n        { id: 878, name: t('genre.Sci-Fi') },\n        { id: 10770, name: t('genre.TV-Movie') },\n        { id: 53, name: t('genre.Thriller') },\n        { id: 10752, name: t('genre.War') },\n        { id: 37, name: t('genre.Western') },\n    ];\n\n    //search movies function \n    const searchMovies = search => {\n        const endpoint = search ? `${API_URL}search/movie?api_key=${API_KEY}&language=${CurrentLanguage}&query=` + search : `${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&vote_count.gte=2500&sort_by=${sort}&primary_release_year=${year}&primary_release_date.gte=${yearRange.min}-01-01&primary_release_date.lte=${yearRange.max === date.getFullYear() ? convertDate(date) : yearRange.max + '-12-31'}&with_genres=${genreID}`\n        setSearchTerm(search)\n        fetchMovies(endpoint)\n    }\n\n    //loadmoremovies function\n    const loadMoreMovies = () => {\n        const popularEndpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&vote_count.gte=2500&sort_by=${sort}&primary_release_year=${year}&vote_average.gte=${rating.min}&vote_average.lte=${rating.max}&primary_release_date.gte=${yearRange.min}-01-01&primary_release_date.lte=${yearRange.max === date.getFullYear() ? convertDate(date) : yearRange.max + '-12-31'}&with_genres=${genreID}&page=${CurrentPage + 1}`;\n        const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=${CurrentLanguage}&query=${searchTerm}&page=${CurrentPage + 1}`\n        const endpoint = searchTerm ? searchEndpoint : popularEndpoint\n        fetchMovies(endpoint)\n    }\n\n    const handleScroll = e => {\n        const windowHeight =\n            'innerHeight' in window\n                ? window.innerHeight\n                : document.documentElement.offsetHeight;\n\n        const body = document.body;\n        const html = document.documentElement;\n\n        const docHeight = Math.max(\n            body.scrollHeight,\n            body.offsetHeight,\n            html.clientHeight,\n        );\n\n        const windowBottom = windowHeight + window.pageYOffset;\n\n        if (windowBottom >= docHeight - 1) {\n            buttonRef.current && buttonRef.current.click();\n        }\n    };\n\n    const toggleFilterBar = () => {\n        setToggle(!toggle)\n    }\n    const pickYear = new Date().getFullYear();\n\n    const MovieIcon = createFromIconfontCN({\n        scriptUrl: '//at.alicdn.com/t/font_1804216_tqdqw1tcevm.js',\n    });\n\n    if (error) return <div style={{ width: '100%', fontSize: '1.5rem', height: '200px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>Woops! Something went very wrong...</div>\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            <MainImage landing\n                image={\"https://res.cloudinary.com/dkyqbngya/image/upload/v1586011642/czr9s0nxspurc9blgn9l.jpg\"}\n            />\n\n            <SearchBar callback={searchMovies} />\n\n            {/* Filters */}\n\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Button type=\"primary\" shape=\"round\" onClick={toggleFilterBar} style={{ fontSize: '1rem' }}>{!toggle ? t('filters.showFilters') : t('filters.dontShowFilters')}</Button>\n            </div>\n\n            {toggle &&\n                <div style={{ width: '85%', margin: '1rem auto', justifyContent: 'center' }}>\n                    <br />\n                    <Row gutter={[8, 8]}>\n                        <Col span={12}>\n                            <form style={{ textAlign: 'center' }}>\n                                <label style={{ padding: \"10px\" }}><b>{t('filters.sortMovies')}:</b></label>\n                                <select name=\"sortBy\" onChange={makeItSort} ref={selectElPop}>\n                                    <option value=\"popularity.desc\">{t('filters.sortMovies')}</option>\n                                    <option value=\"primary_release_date.desc\">{t('filters.releaseYearHigh')}</option>\n                                    <option value=\"primary_release_date.asc\">{t('filters.releaseYearLow')}</option>\n                                    <option value=\"original_title.asc\">{t('filters.titleName')}</option>\n                                    <option value=\"vote_average.desc\">{t('filters.ratingHigh')}</option>\n                                    <option value=\"vote_average.asc\">{t('filters.ratingLow')}</option>\n                                </select>\n                            </form>\n                        </Col>\n                        <br />\n                        <Col span={12}>\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                                <p style={{ display: 'flex', justifyContent: 'center', paddingRight: '20px' }}><b>{t('filters.rating')}</b></p>\n                                <InputRange\n                                    className=\"input-range\"\n                                    maxValue={10}\n                                    minValue={0}\n                                    value={rating}\n                                    onChange={value => onRatingSliderChange(value)}\n                                    // onChange={rating => onRatingSliderChange(rating)}\n                                />\n                            </div>\n                        </Col>\n                        <br />\n                    </Row>\n                    <Row gutter={[8, 8]}>\n                        <Col span={12}>\n                            <form style={{ textAlign: 'center' }}>\n                                <label style={{ padding: \"10px\" }}><b>{t('filters.sortYear')}:</b></label>\n                                <select onChange={makeItYear} ref={selectEl}>\n                                    <option value=\"\">{t('filters.year')}</option>\n                                    {Array.from(new Array(41), (value, i) =>\n                                        <option key={i} value={pickYear - i}>{pickYear - i}</option>\n                                    )}\n                                </select>\n                            </form>\n                        </Col>\n                        <Col span={12}>\n                            <div style={{ display: 'flex', justifyContent: 'center' }}>\n\n                                <p style={{ display: 'flex', justifyContent: 'center', paddingRight: '20px' }}><b>{t('filters.releaseYear')}</b></p>\n                                <InputRange\n                                    className=\"input-range\"\n                                    maxValue={2020}\n                                    minValue={1980}\n                                    value={yearRange}\n                                    onChange={value => onYearRangeSliderChange(value)}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n\n                    <Divider>Genres</Divider>\n                    <div style={{ textAlign: 'center' }}>\n                        {genres.map(\n                            genre =>\n                                <Button\n                                    key={genre.name}\n                                    shape=\"round\"\n                                    size=\"small\"\n                                    onClick={handleGenre}\n                                    value={genre.id}\n                                    style={{ borderColor: \"#19ba90\", textAlign: \"center\", fontSize: \"0.9em\", margin: \"1px\" }}\n                                >{genre.name}\n                                </Button>\n                        )}\n                    </div>\n\n                    <br />\n                    <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                        {/* <Button><a href=\"/landing\">{t('filters.clearFilters')}</a></Button> */}\n                        <Button onClick={clearFilters}>{t('filters.clearFilters')}</Button>\n                    </div>\n\n                </div>\n            }\n\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n\n\n                <React.Fragment>\n                    <Title level={2}><MovieIcon type=\"icon-movie3\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{searchTerm ? t('landing.searchRes') : t('landing.latest')}</Title>\n                    <hr />\n                    <br />\n                </React.Fragment>\n\n                <Row gutter={[16, 16]}>\n                    {Movies !== undefined && Movies[0] ? Movies && Movies.map((movie, index) => (\n                        <React.Fragment key={movie.id}>\n                            {movie && movie.poster_path && movie.release_date && movie.vote_count > 2300\n                                && movie.imdb_id !== null && movie.backdrop_path !== null && movie.overview !== null && (\n                                    <GridCard movie\n                                        image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : t('landing.notAvail')}\n                                        movieId={movie.id}\n                                        movieName={movie.title}\n                                        date={movie.release_date}\n                                        vote={movie.vote_average ? movie.vote_average : 'N/A'}\n                                        movieGenre={movie.genre_ids &&\n                                            movie.genre_ids.length &&\n                                            movie.genre_ids.map(genreID => (\n                                                <span key={genreID}>\n                                                    {genres.map(\n                                                        genre =>\n                                                            genreID === genre.id && (\n                                                                <Link key={genre.name} to={`/landing/genre/${genre.name}/${genre.id}`}>\n                                                                    <Button\n                                                                        key={genre.name}\n                                                                        shape=\"round\"\n                                                                        size=\"small\"\n                                                                        style={{ borderColor: \"#19ba90\", textAlign: \"center\", fontSize: \"0.9em\", margin: \"1px\" }}\n                                                                    >{genre.name}\n                                                                    </Button>\n                                                                </Link>\n                                                            )\n                                                    )}\n                                                </span>\n                                            )).slice(0, 3)}\n                                    />\n                                )\n                            }\n                        </React.Fragment>\n                    )) : !Movies[0] && !loading && <div style={{ width: '100%', fontSize: '1.5rem', height: '200px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>{t(\"landing.noresults\")}</div>}\n                </Row>\n\n                {loading && <Spinner />}\n                {CurrentPage < totalPages && !loading && (\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div ref={buttonRef} className=\"loadMore\" onClick={loadMoreMovies}>{t('landing.loadmore')}</div>\n                    </div>\n                )}\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default LandingPage","import React, { useState, useRef, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport { Typography, Row, Button } from 'antd';\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, IMAGE_SIZE, CurrentLanguage } from '../../Config'\nimport { useTranslation } from 'react-i18next';\nimport MainImage from '../../views/LandingPage/Sections/MainImage'\nimport GridCard from '../../commons/GridCards';\nimport SearchBar from '../LandingPage/Sections/SearchBar';\nimport Spinner from '../LandingPage/Sections/Spinner';\nimport { Link } from 'react-router-dom';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\n// Hooks\nimport { useFetchByGenre } from './hooks/useFetchByGenre';\n\nconst { Title } = Typography;\n\nconst GenresPage = () => {\n    let { genreId, genreName, movieId } = useParams();\n    const [{ state: { Movies, MainMovieImage, CurrentPage, totalPages },\n        loading,\n        error },\n        fetchMoviesByGenre\n    ] = useFetchByGenre(genreId);\n    const history = useHistory();\n\n    const handleClick = () => {\n        history.push(`/movie/${movieId}`);\n    }\n\n    const [searchTerm, setSearchTerm] = useState('');\n    const buttonRef = useRef(null);\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", handleScroll);\n    }, [])\n\n    const genres = [\n        { id: 28, name: t('genre.Action') },\n        { id: 12, name: t('genre.Adventure') },\n        { id: 16, name: t('genre.Animation') },\n        { id: 35, name: t('genre.Comedy') },\n        { id: 80, name: t('genre.Crime') },\n        { id: 99, name: t('genre.Documentary') },\n        { id: 18, name: t('genre.Drama') },\n        { id: 10751, name: t('genre.Family') },\n        { id: 14, name: t('genre.Fantasy') },\n        { id: 36, name: t('genre.History') },\n        { id: 27, name: t('genre.Horror') },\n        { id: 10402, name: t('genre.Music') },\n        { id: 9648, name: t('genre.Mystery') },\n        { id: 10749, name: t('genre.Romance') },\n        { id: 878, name: t('genre.Sci-Fi') },\n        { id: 10770, name: t('genre.TV-Movie') },\n        { id: 53, name: t('genre.Thriller') },\n        { id: 10752, name: t('genre.War') },\n        { id: 37, name: t('genre.Western') },\n    ];\n\n    const searchMovies = search => {\n        const endpoint = search ? `${API_URL}search/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}&query=` + search : `${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}`\n        setSearchTerm(search)\n        fetchMoviesByGenre(endpoint)\n    }\n\n    const loadMoreMovies = () => {\n        const genresEndpoint = `${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}&page=${CurrentPage + 1}`;\n        const searchEndpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}&query=${searchTerm}&page=${CurrentPage + 1}`\n        const endpoint = searchTerm ? searchEndpoint : genresEndpoint\n        fetchMoviesByGenre(endpoint);\n    }\n\n    const handleScroll = e => {\n        const windowHeight =\n            'innerHeight' in window\n                ? window.innerHeight\n                : document.documentElement.offsetHeight;\n\n        const body = document.body;\n        const html = document.documentElement;\n\n        const docHeight = Math.max(\n            body.scrollHeight,\n            body.offsetHeight,\n            html.clientHeight,\n        );\n\n        const windowBottom = windowHeight + window.pageYOffset;\n\n        if (windowBottom >= docHeight - 1) {\n            buttonRef.current && buttonRef.current.click();\n        }\n    };\n\n    const MovieIcon = createFromIconfontCN({\n        scriptUrl: '//at.alicdn.com/t/font_1804216_tqdqw1tcevm.js',\n    });\n\n    if (error) return <div>Something went wrong...</div>;\n    return (\n        <div style={{ width: '100%', margin: '0' }}>\n            {!loading ? MainMovieImage !== null &&\n                <MainImage genre\n                    image={MainMovieImage.backdrop_path ? `${IMAGE_BASE_URL}${IMAGE_SIZE}${MainMovieImage.backdrop_path}` : \"https://res.cloudinary.com/dkyqbngya/image/upload/v1586787757/detykqycj7ejezsjmxln.png\"}\n                    genreName={genreName}\n                />\n                :\n                <div><Spinner /></div>\n            }\n\n                <SearchBar callback={searchMovies} />\n\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Button type=\"primary\" shape=\"round\" style={{ fontSize: '1rem' }}><a href=\"/landing\">{t('genre.landing')}</a></Button>\n            </div>\n\n            <div style={{ width: '85%', margin: '1rem auto' }}>\n\n                {!loading ?\n                    <React.Fragment>\n                        <Title level={2}><MovieIcon type=\"icon-movie3\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{searchTerm ? t('landing.searchRes') : genreName}</Title>\n                        <hr />\n                        <br />\n                    </React.Fragment>\n                    :\n                    null}\n\n                <Row gutter={[16, 16]}>\n                    {Movies[0] ? Movies && Movies.map((movie, index) => (\n                        <React.Fragment key={movie.id}>\n                            {movie && movie.poster_path && movie.release_date && movie.vote_count > 2300\n                                && movie.imdb_id !== null && movie.backdrop_path !== null && movie.overview !== null && (\n                                    <GridCard movie\n                                        onClick={handleClick}\n                                        image={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : t('landing.notAvail')}\n                                        movieId={movie.id}\n                                        movieName={movie.title}\n                                        date={movie.release_date}\n                                        vote={movie.vote_average ? movie.vote_average : 'N/A'}\n                                        movieGenre={movie.genre_ids &&\n                                            movie.genre_ids.length &&\n                                            movie.genre_ids.map(genreID => (\n                                                <span key={genreID}>\n                                                    {genres.map(\n                                                        genre =>\n                                                            genreID === genre.id && (\n                                                                <Link key={genre.name} to={`/landing/genre/${genre.name}/${genre.id}`}>\n                                                                    <Button\n                                                                        key={genre.name}\n                                                                        shape=\"round\"\n                                                                        size=\"small\"\n                                                                        style={{ borderColor: \"#19ba90\", textAlign: \"center\", fontSize: \"0.9em\", margin: \"1px\" }}\n                                                                    >{genre.name}\n                                                                    </Button>\n                                                                </Link>\n                                                            )\n                                                    )}\n                                                </span>\n                                            )).slice(0, 3)}\n                                    />)\n                            }\n                        </React.Fragment>\n                    )) : !Movies[0] && !loading && <div style={{ width: '100%', fontSize: '1.5rem', height: '200px', display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center' }}>{t(\"landing.noresults\")}</div>}\n                </Row>\n\n                {loading && <Spinner />}\n                {CurrentPage < totalPages && !loading && (\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        <div ref={buttonRef} className=\"loadMore\" onClick={loadMoreMovies}>{t('landing.loadmore')}</div>\n                    </div>\n                )}\n\n\n\n            </div>\n        </div>\n    )\n}\n\nexport default GenresPage;","import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { API_URL, API_KEY } from '../../../Config'\n\nexport const useFetchByGenre = (genreId) => {\n    const [state, setState] = useState({ Movies: [] });\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    const history = useHistory();\n\n    const fetchMoviesByGenre = async endpoint => {\n        setError(false);\n        setLoading(true);\n    \n        const isLoadMore = endpoint.search('page');\n    \n        try {\n          const result = await (await fetch(endpoint)).json();\n          if (result.results.length === 0) {\n            history.goBack();\n          }\n          const randomIndex = Math.floor(Math.random() * 20)\n          setState(prev => ({\n            ...prev,\n            Movies:\n              isLoadMore !== -1\n                ? [...prev.Movies, ...result.results]\n                : [...result.results],\n                MainMovieImage : prev.MainMovieImage || result.results[randomIndex],\n                CurrentPage: result.page,\n                totalPages: result.total_pages,\n          }));\n  \n        } catch (error) {\n          setError(true);\n          console.error(error);\n        }\n        setLoading(false);\n      };\n\n    useEffect(() => {\n      const CurrentLanguage = localStorage.getItem('language');\n      fetchMoviesByGenre(`${API_URL}discover/movie?api_key=${API_KEY}&language=${CurrentLanguage}&with_genres=${genreId}`)\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [genreId]);\n\n    return [{ state, loading, error }, fetchMoviesByGenre]\n  }","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { useDispatch } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\n\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialUsername = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        username: initialUsername,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string()\n          .min(2, t('login.usernameErr'))\n          .required(t('login.usernameErr2')),\n        password: Yup.string()\n          .min(4, t('login.passwordErr'))\n          .required(t('login.passwordErr2')),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            username: values.username,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.username);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/landing\");\n              } else {\n                setFormErrorMessage(t('login.formErr'))\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage(t('login.formErr'))\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"loginbg\">\n            <div className=\"login\">\n              <Title level={3} style={{textAlign: \"center\"}}>{t('login.login')}</Title>\n              <form onSubmit={handleSubmit}>\n\n                <Form.Item required>\n                  <Input\n                    id=\"username\"\n                    prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder={t('login.username')}\n                    type=\"text\"\n                    value={values.username}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.username && touched.username ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.username && touched.username && (\n                    <div className=\"input-feedback\">{errors.username}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required>\n                  <Input\n                    id=\"password\"\n                    prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                    placeholder={t('login.password')}\n                    type=\"password\"\n                    autoComplete=\"off\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.password && touched.password && (\n                    <div className=\"input-feedback\">{errors.password}</div>\n                  )}\n                </Form.Item>\n\n                {formErrorMessage && (\n                  <label ><p style={{ color: '#ff0000bf', textAlign: 'center', fontSize: '0.8rem', border: '1px solid', padding: '0.5rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n                )}\n\n                <Form.Item>\n                  <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe}>{t('login.remember')}</Checkbox>\n                  <a className=\"login-form-forgot\" href=\"/forgot\" style={{ float: 'right' }}>\n                    {t('login.forgot')}\n                  </a>\n                  <div>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                      {t('login.login')}\n                    </Button>\n                  </div>\n                Or <a href=\"/register\">{t('login.registernow')}</a>\n                </Form.Item>\n\n                <h3>{t('login.connect')}</h3>\n\n                <div className=\"container\" style={{ textAlign: \"center\" }}>\n                <label ><p style={{ color: '#ff0000bf', backgroundColor: 'white', textAlign: 'center', fontSize: '0.85rem', border: '1px solid', padding: '0.5rem', borderRadius: '10px' }}>\n                Welcome to the Live Demo.<br />\n                  You can sign up now or use the following credentials:<br />\n                  <b>Username:</b> test <br />\n                  <b>Password:</b> test</p></label>\n                </div>\n              </form>\n            </div>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);","import React, { useState } from \"react\";\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport { message } from 'antd';\nimport Spinner from '../LandingPage/Sections/Spinner';\nimport { useTranslation } from 'react-i18next';\nimport { store } from \"react-notifications-component\";\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\n\nfunction RegisterPage(props) {\n  const { t } = useTranslation();\n\n  const [image, setImage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [content, setContent] = React.useState(\"\");\n  const imageInputRef = React.useRef();\n  var allowedTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\"];\n\n\n  const uploadImage = e => {\n    e.preventDefault();\n    setContent(e.target.value)\n    const files = e.target.files[0];\n    const cloudName = \"dkyqbngya\";\n    const unsignedUploadPreset = \"f7r0dz2t\";\n    var url = `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`;\n    if (!files || files.length === 0)\n      return;\n    if (files) {\n      var extension = files.name.replace(/.*\\./, '').toLowerCase();\n      if (allowedTypes.indexOf(extension) < 0) {\n        message.error(`${files.type}${t('register.imgFormat')}`)\n        imageInputRef.current.value = \"\";\n        setContent(\"\");\n        setImage(\"\"); \n        return;\n      }\n      if (files.size > 150000) {\n        message.error(`${files.name}${t('register.imgTooLarge')}`)\n        imageInputRef.current.value = \"\";\n        setContent(\"\");\n        setImage(\"\"); \n        return;\n      }\n      else {\n        var fd = new FormData();\n        fd.append(\"file\", files);\n        fd.append(\"upload_preset\", unsignedUploadPreset);\n        setLoading(true);\n        const config = {\n          headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n        };\n        axios.post(url, fd, config)\n          .then(res => {\n            setLoading(false)\n            // console.log(res)\n            var url = res.data.secure_url;\n            // console.log(res.data)\n            var resize = url.split('/');\n            resize.splice(-3, 0, 'w_125,c_scale');\n            var img = new Image();\n            img.src = resize.join('/');\n            setImage(img.src)\n          })\n          .catch((err) => {\n            if (err) {\n              switch (err.response.status) {\n                case 400:\n                  message.error(t('register.imgInvalid'))\n                  break;\n                case 404:\n                  message.error(t('register.imgNotFound'))\n                  break;\n                case 500:\n                  message.error(t('register.imgError'))\n                  break;\n                default:\n                  break;\n              }\n            }\n          })\n      }\n    }\n  }\n\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        firstName: '',\n        lastName: '',\n        username: '',\n        password: '',\n        confirmPassword: '',\n        image: ''\n      }}\n      validationSchema={Yup.object().shape({\n        username: Yup.string()\n          .required(t('register.usernameErr'))\n          .matches(/^[A-Za-z0-9_]{2,20}$/, t('register.usernameRules'))\n          .min(2, t('register.usernameMin'))\n          .max(20, t('register.usernameMax')),\n        firstName: Yup.string()\n          .required(t('register.firstNameErr'))\n          .matches(/^[A-Z]+$/i, t('register.firstNameAlpha'))\n          .min(2, t('register.firstNameMin'))\n          .max(20, t('register.firstNameMax')),\n        lastName: Yup.string()\n          .required(t('register.lastNameErr'))\n          .matches(/^[A-Z]+$/i, t('register.lastNameAlpha'))\n          .min(2, t('register.lastNameMin'))\n          .max(20, t('register.lastNameMax')),\n        email: Yup.string()\n          .email(t('register.emailInvalid'))\n          .required(t('register.emailErr')),\n        password: Yup.string()\n          .min(4, t('register.passwordMin'))\n          .max(15, t('register.passwordMax'))\n          //DECOMMENTER AVANT PUSH FINAL\n          // .matches(\n          //   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n          //   t('register.passRegex')\n          // )\n          .required(t('register.passwordErr')),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], t('register.passwordMatch'))\n          .required(t('register.cpasswordErr')),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            username: values.username,\n            firstName: values.firstName,\n            lastName: values.lastName,\n            image: image\n          };\n\n          if (!image || image === '') {\n            message.error(t('register.imageErr'))\n          }\n          else {\n\n            dispatch(registerUser(dataToSubmit)).then(response => {\n              if (response.payload.success) {\n                store.addNotification({\n                  message: t('register.checkEmail'),\n                  insert: \"top\",\n                  type: 'success',\n                  container: \"top-right\",\n                  animationIn: [\"animated\", \"fadeIn\"],\n                  animationOut: [\"animated\", \"fadeOut\"],\n                  dismiss: {\n                    duration: 5000,\n                    onScreen: true\n                  }\n                });\n                props.history.push(\"/login\");\n              } else {\n                alert(response.payload.err);\n              }\n            })\n          }\n          setSubmitting(false);\n        }, 500);\n      }}\n\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n        } = props;\n        return (\n          <div className=\"registerbg\">\n            <div className=\"register\">\n              <h1 style={{textAlign: \"center\"}}>{t('register.signup')}</h1>\n              <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n                <Form.Item required label={t('register.username')}>\n                  <Input\n                    id=\"username\"\n                    placeholder={t('register.usernameForm')}\n                    type=\"text\"\n                    autoComplete=\"username\"\n                    value={values.username}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.username && touched.username ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.username && touched.username && (\n                    <div className=\"input-feedback\">{errors.username}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required label={t('register.firstName')}>\n                  <Input\n                    id=\"firstName\"\n                    placeholder={t('register.firstNameForm')}\n                    type=\"text\"\n                    value={values.firstName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.firstName && touched.firstName ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.firstName && touched.firstName && (\n                    <div className=\"input-feedback\">{errors.firstName}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required label={t('register.lastName')}>\n                  <Input\n                    id=\"lastName\"\n                    placeholder={t('register.lastNameForm')}\n                    type=\"text\"\n                    value={values.lastName}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.lastName && touched.lastName && (\n                    <div className=\"input-feedback\">{errors.lastName}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required label={t('register.email')}>\n                  <Input\n                    id=\"email\"\n                    placeholder={t('register.emailForm')}\n                    type=\"email\"\n                    autoComplete=\"email\"\n                    value={values.email}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.email && touched.email ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.email && touched.email && (\n                    <div className=\"input-feedback\">{errors.email}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required label={t('register.password')} hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                  <Input\n                    id=\"password\"\n                    placeholder={t('register.passwordForm')}\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    value={values.password}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.password && touched.password ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.password && touched.password && (\n                    <div className=\"input-feedback\">{errors.password}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required label={t('register.cpassword')} hasFeedback validateStatus={errors.cpassword && touched.cpassword ? \"error\" : 'success'}>\n                  <Input\n                    id=\"confirmPassword\"\n                    placeholder={t('register.cpasswordForm')}\n                    type=\"password\"\n                    autoComplete=\"new-password\"\n                    value={values.confirmPassword}\n                    onChange={handleChange}\n                    onBlur={handleBlur}\n                    className={\n                      errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                    }\n                  />\n                  {errors.confirmPassword && touched.confirmPassword && (\n                    <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                  )}\n                </Form.Item>\n\n                <Form.Item required label={t('register.image')}>\n                  <Input\n                    id=\"image\"\n                    type=\"file\"\n                    name=\"image\"\n                    accept={\"image/*\"}\n                    onChange={uploadImage}\n                    onBlur={handleBlur}\n                    value={content}\n                    ref={imageInputRef}\n                  />\n                  <div name=\"image\" className=\"imagePreview\">\n                  {loading ? <Spinner />: <img src={image} alt=\"\" />}\n                  </div>\n                </Form.Item>\n\n                <Form.Item {...tailFormItemLayout}>\n                  <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                    {t('register.submit')}\n                  </Button>\n                </Form.Item>\n              </Form>\n            </div>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage","import React from 'react';\nimport { Menu } from 'antd';\nimport { useSelector } from \"react-redux\";\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\n\nconst PopcornIcon = createFromIconfontCN({\n  scriptUrl: '//at.alicdn.com/t/font_1804216_05evm2uwptc9.js',\n});\n\nfunction LeftMenu(props) {\n  const { t } = useTranslation();\n\n  const user = useSelector(state => state.user)\n\n  if (user.userData && !user.userData.isAuth) {\n  return \"\"\n    } else {\n    return (\n      <Menu mode={props.mode}>\n      <Menu.Item key=\"\">\n      <a href=\"/favorite\"><PopcornIcon type=\"icon-popcorn\" style={{fontSize: \"25px\"}}/>{t('navbar.favorites')}</a>\n      </Menu.Item>\n    </Menu>\n    )\n  }\n}\n\nexport default LeftMenu","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react'\nimport { Menu } from 'antd';\nimport axios from 'axios';\nimport { USER_SERVER } from '../../../Config';\nimport { LogoutOutlined, LoginOutlined, UserAddOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\nimport { useTranslation } from 'react-i18next';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    marginLeft: 10, \n    alignItems: 'center',\n  },\n  selectEmpty: {\n    '& .MuiSelect-root': {\n      background: 'white',\n  },\n    marginTop: theme.spacing(2),\n    marginLeft: 10,\n  },\n}));\n\nfunction RightMenu(props) {\n\n  const { t, i18n } = useTranslation();\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n  let language = i18n.language;\n\n  const classes = useStyles();\n  function onChange(e) {\n    changeLanguage(e.target.value);\n    localStorage.setItem(\"language\", e.target.value);\n  }\n\n  const user = useSelector(state => state.user)\n\n  const logoutHandler = () => {\n    axios.get(`${USER_SERVER}/logout`).then(response => {\n      if (response.status === 200) {\n        props.history.push(\"/login\");\n      } else {\n        alert('Log Out Failed')\n      }\n    });\n  };\n\n  const [Username, setUsername] = useState('');\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    fetchUsername()\n    if (!mounted){\n      setMounted(true);\n  }\n    }, [props, mounted])\n\n  const fetchUsername = () => {\n    axios.get('/api/users/auth')\n      .then(response => {\n        if (response.data) {\n          setUsername(response.data.username)\n        } else {\n          alert('Failed to get Username')\n        }\n      })\n  }\n\n  const GroupIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_5e8qc34kmnl.js',\n  });\n\n  if (user.userData && !user.userData.isAuth) {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"mail\">\n          <a href=\"/login\">{t('navbar.login')}<LoginOutlined style={{padding: \"10px\"}}/></a>\n        </Menu.Item>\n        <Menu.Item key=\"app\">\n          <a href=\"/register\">{t('navbar.register')}<UserAddOutlined style={{padding: \"10px\"}}/></a>\n        </Menu.Item>\n        <React.Fragment>\n        <FormControl className={classes.formControl}>\n          <Select\n            value={language}\n            onChange={onChange}\n            displayEmpty\n            autoWidth\n            disableUnderline\n            IconComponent={() => \"\"}\n            className={classes.selectEmpty}\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n            <MenuItem value=\"en-US\"><img src=\"https://res.cloudinary.com/dkyqbngya/image/upload/c_scale,w_25/v1585483470/united-states-of-america-flag-button-round-xs_xgcefz.png\" alt=\"US Flag\"/></MenuItem>\n            <MenuItem value=\"fr-FR\"><img src=\"https://res.cloudinary.com/dkyqbngya/image/upload/c_scale,w_25/v1585483466/france-flag-button-round-icon-64_uqllrc.png\" alt=\"French Flag\" /></MenuItem>\n          </Select>\n        </FormControl>\n        </React.Fragment>\n      </Menu>\n    )\n  } else {\n    return (\n      <Menu mode={props.mode}>\n        <Menu.Item key=\"profile\"><a href=\"/profile\">{t(\"navbar.welcome\")}&nbsp;&nbsp;<span className=\"username\">{Username}</span></a>\n        </Menu.Item>\n        <Menu.Item key=\"users\">\n          <a href=\"/users\"><GroupIcon type=\"icon-group\" style={{fontSize: \"20px\"}}/>{t('navbar.users')}</a>\n        </Menu.Item>\n        <Menu.Item key=\"logout\">\n          <a onClick={logoutHandler}><LogoutOutlined />{t('navbar.logout')}</a>\n        </Menu.Item>\n        <React.Fragment>\n        <FormControl className={classes.formControl}>\n          <Select\n            value={language}\n            onChange={onChange}\n            displayEmpty\n            autoWidth\n            disableUnderline\n            IconComponent={() => \"\"}\n            className={classes.selectEmpty}\n            inputProps={{ 'aria-label': 'Without label' }}\n          >\n            <MenuItem value=\"en-US\"><img src=\"https://res.cloudinary.com/dkyqbngya/image/upload/c_scale,w_25/v1585483470/united-states-of-america-flag-button-round-xs_xgcefz.png\" alt=\"US Flag\" /></MenuItem>\n            <MenuItem value=\"fr-FR\"><img src=\"https://res.cloudinary.com/dkyqbngya/image/upload/c_scale,w_25/v1585483466/france-flag-button-round-icon-64_uqllrc.png\" alt=\"French Flag\" /></MenuItem>\n          </Select>\n        </FormControl>\n        </React.Fragment>\n      </Menu>\n    )\n  }\n}\n\nexport default withRouter(RightMenu);","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\nimport RightMenu from './Sections/RightMenu';\nimport { useSelector } from 'react-redux';\nimport { Drawer, Button } from 'antd';\nimport { AlignRightOutlined } from '@ant-design/icons';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n  const user = useSelector(state => state.user)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n\n  return (\n    <nav className=\"menu\" style={{ position: 'fixed', zIndex: 1, width: '100%' }}>\n      <div className=\"menu__logo\">\n      {user.userData && !user.userData.isAuth ?\n        <a href=\"/\"><img src=\"https://res.cloudinary.com/dkyqbngya/image/upload/c_scale,w_200/v1584983552/logo_lqnlwk.png\" alt=\"Logo\" style={{ width: '100%', marginTop: '-5px' }} /></a> \n        : <a href=\"/landing\"><img src=\"https://res.cloudinary.com/dkyqbngya/image/upload/c_scale,w_200/v1584983552/logo_lqnlwk.png\" alt=\"Logo\" style={{ width: '100%', marginTop: '-5px' }} /></a>\n        }\n      </div>\n      <div className=\"menu__container\">\n        <div className=\"menu_left\">\n          <LeftMenu mode=\"horizontal\" />\n        </div>\n        <div className=\"menu_right\">\n          <RightMenu mode=\"horizontal\" />\n        </div>\n        <Button\n          className=\"menu__mobile-button\"\n          type=\"primary\"\n          onClick={showDrawer}\n        >\n          <AlignRightOutlined />\n        </Button>\n        <Drawer\n          title=\"Menu\"\n          placement=\"right\"\n          className=\"menu_drawer\"\n          closable={false}\n          onClose={onClose}\n          visible={visible}\n        >\n          <LeftMenu mode=\"inline\" />\n          <RightMenu mode=\"inline\" />\n        </Drawer>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div style={{\n            height: '80px', \n            display: 'flex',\n            flexDirection: 'column', \n            alignItems: 'center',\n            justifyContent: 'center', \n            fontSize:'1rem'\n        }}>\n           <p>Made by Shrey Srivastav</p>\n        </div>\n    )\n}\n\nexport default Footer\n","import {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n\n    playerWrapper: {\n    position: 'relative',\n    paddingTop: '56.25%' /* Player ratio: 100 / (1280 / 720) */\n    },\n    reactPlayer: {\n        position: 'absolute',\n        top: '0',\n        left: '0'\n    },\n    buttonChooseSource: {\n        color: 'white',\n        borderColor: 'white'\n    },\n    buttonActors: {\n        borderRadius: '10px !important',\n    },\n    loadingSources: {\n        marginRight: '1em',\n        color: 'white',\n    },\n    movieContainer: {\n        paddingTop: 50,\n        paddingBottom: 50,\n    },\n    backdrop: {\n        position: 'absolute',\n        height: '100%',\n        width: '100%',\n        zIndex: -1,\n        '&:after': {\n            position: 'absolute',\n            content: \"''\",\n            display: 'block',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            background: 'rgba(30, 47, 60, 0.75)',\n            backgroundImage: 'radial-gradient(circle at 20% 50%, rgba(30, 47, 60, 0.75) 0%, rgba(48, 65, 78, 0.75) 100%)'\n        }\n    },\n    backdropImage: {\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        objectFit: 'cover',\n    },\n    poster: {\n        width: '100%',\n        borderRadius: 10,\n        boxShadow: '0px 3px 20px #0000003b',\n    },\n    releaseDate: {\n        fontSize: '11pt',\n        color: '#dadde2'\n    },\n    vote: {\n        display: 'flex',\n        alignItems: 'center',\n        fontSize: '12pt'\n    },\n    genreList: {\n        listStyle: 'none',\n        padding: 0,\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    genre: {\n        cursor: 'pointer',\n        padding: '1px 6px',\n        marginRight: 10,\n        border: '1px solid white',\n        borderRadius: 4,\n        fontSize: '10pt'\n    },\n    subtitle: {\n        marginBottom: 8,\n        fontSize: '13pt',\n        color: 'white'\n    },\n    crewList: {\n        listStyle: 'none',\n        padding: 0,\n    },\n}));\n\nexport default useStyles;","import React, { useEffect, useState } from \"react\";\nimport { Tooltip } from \"antd\";\nimport Axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { LikeTwoTone } from \"@ant-design/icons\";\nimport { DislikeTwoTone } from \"@ant-design/icons\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction LikeDislikes(props) {\n\tconst { t } = useTranslation();\n\tconst user = useSelector(state => state.user);\n\tconst [Likes, setLikes] = useState(0);\n\tconst [Dislikes, setDislikes] = useState(0);\n\n\tlet variable = {};\n\n\tif (props.video) {\n\t\tvariable = { videoId: props.videoId, userId: props.userId };\n\t} else {\n\t\tvariable = { commentId: props.commentId, userId: props.userId };\n\t}\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tconst getLikes = () => {\n\t\t\tAxios.post(\"/api/like/getLikes\", variable)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data.success) {\n\t\t\t\t\t\tmounted && setLikes(response.data.likes.length);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\tgetLikes();\n\t\treturn () => { mounted = false; }\n\t}, [props, variable]);\n\n\tuseEffect(() => {\n\t\tlet mounted = true;\n\t\tconst getDislikes = () => {\n\t\t\tAxios.post(\"/api/like/getDislikes\", variable)\n\t\t\t\t.then(response => {\n\t\t\t\t\tif (response.data.success) {\n\t\t\t\t\t\tmounted && setDislikes(response.data.dislikes.length);\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t\tgetDislikes();\n\t\treturn () => { mounted = false; }\n\t}, [props, variable]);\n\n\tconst onLike = () => {\n\t\tif (user.userData && !user.userData.isAuth) {\n\t\t\treturn props.history.push(\"/login\");;\n\t\t}\n\t\tAxios.post(\"/api/like/upLike\", variable)\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.success) {\n\t\t\t\t\tif (response.data.up === true) {\n\t\t\t\t\t\tsetLikes(Likes + 1);\n\t\t\t\t\t\tif (Dislikes !== 0) {\n\t\t\t\t\t\t\tsetDislikes(Dislikes - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetLikes(Likes - 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn props.history.push(\"/login\");\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tconst onDisLike = () => {\n\t\tif (user.userData && !user.userData.isAuth) {\n\t\t\treturn props.history.push(\"/login\");\n\t\t}\n\t\tAxios.post(\"/api/like/upDisLike\", variable)\n\t\t\t.then(response => {\n\t\t\t\tif (response.data.success) {\n\t\t\t\t\tif (response.data.up === true) {\n\t\t\t\t\t\tsetDislikes(Dislikes + 1);\n\t\t\t\t\t\tif (Likes !== 0) {\n\t\t\t\t\t\t\tsetLikes(Likes - 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsetDislikes(Dislikes - 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\treturn props.history.push(\"/login\");\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<span key=\"comment-basic-like\">\n\t\t\t\t<Tooltip title={t(\"movie.like\")}>\n\t\t\t\t\t<LikeTwoTone\n\t\t\t\t\t\ttwoToneColor=\"#19ba90\"\n\t\t\t\t\t\ttype=\"like\"\n\t\t\t\t\t\tonClick={onLike}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t\t<span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>{Likes}</span>\n\t\t\t</span>&nbsp;&nbsp;&nbsp;&nbsp;\n\t\t\t<span key=\"comment-basic-dislike\">\n\t\t\t\t<Tooltip title={t(\"movie.dislike\")}>\n\t\t\t\t\t<DislikeTwoTone\n\t\t\t\t\t\ttwoToneColor=\"#19ba90\"\n\t\t\t\t\t\ttype=\"dislike\"\n\t\t\t\t\t\tonClick={onDisLike}\n\t\t\t\t\t/>\n\t\t\t\t</Tooltip>\n\t\t\t\t<span style={{ paddingLeft: \"8px\", cursor: \"auto\" }}>{Dislikes}</span>\n\t\t\t</span>\n\t\t</React.Fragment>\n\t);\n}\n\nexport default LikeDislikes;","import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input, Modal, Card } from 'antd';\nimport Axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nimport { useTranslation } from 'react-i18next';\nimport { message } from 'antd';\nimport moment from 'moment';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nconst { Meta } = Card;\n\nconst SendIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_o2mk1ztsiol.js',\n});\n\nconst { TextArea } = Input;\n\nfunction SingleComment(props) {\n    const { t } = useTranslation();\n    const user = useSelector(state => state.user);\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    function convertHtmlToText(str) {\n        str = str.toString();\n        return str.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, '');\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        if (!CommentValue) {\n            return message.error(t('movie.replyEmptyCom'));\n        }\n        // else if (CommentValue.length >= 10) {\n        //     return message.error(\"Message too long\");\n        // }\n\n        let date = new Date();\n\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            date: date,\n            responseTo: props.comment._id,\n            content: convertHtmlToText(CommentValue)\n        }\n\n\n        Axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setCommentValue(\"\")\n                    setOpenReply(!OpenReply)\n                    props.refreshFunction(response.data.result)\n                } else {\n                    message.error(t('movie.failCom'))\n                }\n            })\n    }\n\n    const actions = [\n        <LikeDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">{t('movie.reply')}</span>\n    ]\n\n    const [visible, setVisible] = useState(false);\n\n    const showModal = () => {\n        setVisible(true);\n    }\n\n    const handleCancel = () => {\n        setVisible(false);\n    }\n\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.writer && props.comment.writer.username ? <b onClick={showModal} style={{ cursor: \"pointer\" }}>{props.comment.writer.username}</b> : t(\"movie.userDeleted\")}\n                avatar={\n                    <Avatar onClick={showModal}\n                        src={props.comment.writer && props.comment.writer.image ? props.comment.writer.image : t(\"landing.notAvail\")}\n                        alt=\"image\"\n                    />\n                }\n                datetime={moment(props.comment.date).format(\"DD/MM/YYYY - HH:mm\")}\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n            ></Comment>\n            {props.comment.writer ?\n                <Modal\n                    title={`${t('users.profileTitle')} - ${props.comment.writer.username}`}\n                    visible={visible}\n                    onCancel={handleCancel}\n                    width={610}\n                    style={{ top: 20 }}\n                    footer={[\n                        <Button type=\"primary\" key=\"Close\" onClick={handleCancel}>\n                            {t(\"movieInfo.close\")}\n                        </Button>\n                    ]}\n                >\n                    <Card\n                        hoverable\n                        style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                        cover={<Avatar src={props.comment.writer.image} size={84} />}\n                    >\n                        <Meta title={<b>{props.comment.writer.username}</b>} />\n                        <br />\n                        <span>{props.comment.writer.firstName} {props.comment.writer.lastName}</span>\n                    </Card>\n                </Modal>\n                : null\n            }\n\n            {OpenReply &&\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                    <TextArea\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder={t('movie.comReply')}\n                    />\n                    <br />\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}><SendIcon type=\"icon-send\" style={{ fontSize: \"20px\" }} /></Button>\n                </form>\n            }\n\n        </div>\n    )\n}\n\nexport default SingleComment\n","import React, { useEffect, useState } from 'react'\nimport SingleComment from './SingleComment';\nimport { useTranslation } from 'react-i18next';\n\nfunction ReplyComment(props) {\n    \n    const { t } = useTranslation();\n    const [ChildCommentNumber, setChildCommentNumber] = useState(0)\n    const [OpenReplyComments, setOpenReplyComments] = useState(false)\n    useEffect(() => {\n\n        let commentNumber = 0;\n        // props.CommentLists.map((comment) => {\n        props.CommentLists.forEach((comment) => {\n\n            if (comment.responseTo === props.parentCommentId) {\n                commentNumber++\n            }\n        })\n        setChildCommentNumber(commentNumber)\n    }, [props.CommentLists, props.parentCommentId])\n\n\n    let renderReplyComment = (parentCommentId) =>\n        props.CommentLists.map((comment, index) => (\n            <React.Fragment key={comment._id}> \n                {comment.responseTo === parentCommentId &&\n                    <div style={{ width: '80%', marginLeft: '40px' }}>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} parentCommentId={comment._id} postId={props.postId} refreshFunction={props.refreshFunction} />\n                    </div>\n                }\n            </React.Fragment>\n        ))\n\n    const handleChange = () => {\n        setOpenReplyComments(!OpenReplyComments)\n    }\n\n\n    return (\n        <div>\n\n            {ChildCommentNumber > 0 &&\n                <p style={{ fontSize: '14px', margin: 0, color: 'gray' }}\n                    onClick={handleChange} >\n                    {t('movie.view')} {ChildCommentNumber} {t('movie.moreComs')}\n             </p>\n            }\n\n            {OpenReplyComments &&\n                renderReplyComment(props.parentCommentId)\n            }\n\n        </div>\n    )\n}\n\nexport default ReplyComment\n","import React, { useState } from 'react'\nimport { Button, Input, Typography, } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport SingleComment from './SingleComment';\nimport ReplyComment from './ReplyComment';\nimport { useTranslation } from 'react-i18next';\nimport { message } from 'antd';\nimport { CommentOutlined } from '@ant-design/icons';\nimport { createFromIconfontCN } from '@ant-design/icons';\n\nconst SendIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_o2mk1ztsiol.js',\n  });\nconst { TextArea } = Input;\nconst { Title } = Typography;\n\nfunction Comments(props) {\n    const { t } = useTranslation();\n    const user = useSelector(state => state.user)\n    const [Comment, setComment] = useState(\"\")\n\n    const handleChange = (e) => {\n        setComment(e.currentTarget.value)\n    }\n\n    function convertHtmlToText(str) {\n        str = str.toString();\n        return str.replace(/<[^>]*(>|$)|&nbsp;|&zwnj;|&raquo;|&laquo;|&gt;/g, '');\n    }\n\n    const onSubmit = (e) => {\n\n        e.preventDefault();\n\n        if (user.userData && !user.userData.isAuth) {\n            return message.error(t('movie.loginFirst'));\n        }\n        else if (!Comment) {\n            return message.error(t('movie.emptyCom'));\n        }\n        const variables = {\n            content: convertHtmlToText(Comment),\n            writer: user.userData._id,\n            postId: props.postId,\n        }\n        // console.log(variables)\n\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                // console.log(\"ASJKDHALSHDASJDHAKLSJLASHDLASHDLASHDA\")\n                if (response.data.success) {\n                    setComment(\"\")\n                    props.refreshFunction(response.data.result)\n                } else {\n                    message.error(t('movie.failCom'))\n                }\n            })\n    }\n\n    return (\n        <div>\n            <br />\n            <Title level={3}><CommentOutlined style={{paddingRight: \"10px\", fontSize: \"30px\"}}/>{t('movie.share')} {props.movieTitle} </Title>\n            <hr />\n            {/* Comment Lists  */}\n            {/* {console.log(props.CommentLists)} */}\n\n            {props.CommentLists && props.CommentLists.map((comment, index) => (\n                (!comment.responseTo &&\n                    <React.Fragment key={comment._id}>\n                        <SingleComment comment={comment} postId={props.postId} refreshFunction={props.refreshFunction} />\n                        <ReplyComment CommentLists={props.CommentLists} postId={props.postId} parentCommentId={comment._id} refreshFunction={props.refreshFunction} />\n                    </React.Fragment>\n                )\n            ))}\n\n            {props.CommentLists && props.CommentLists.length === 0 &&\n                <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px' }} >\n                    {t('movie.comFirst')}\n                </div>\n            }\n\n            {/* Root Comment Form */}\n            <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                <TextArea\n                    style={{ width: '100%', borderRadius: '5px' }}\n                    onChange={handleChange}\n                    value={Comment}\n                    placeholder={t('movie.comText')}\n                />\n                <br />\n                <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}><SendIcon type=\"icon-send\" style={{fontSize: \"20px\"}}/></Button>\n            </form>\n\n        </div>\n    )\n}\n\nexport default Comments\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Button } from 'antd';\nimport { useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst PopcornIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_05evm2uwptc9.js',\n});\n\nconst PopcornColorIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_c1v18kzse7b.js',\n});\n\nfunction Favorite(props) {\n    const { t } = useTranslation();\n    const history = useHistory();\n    const user = useSelector(state => state.user)\n\n    const movieId = props.movieId\n    const userFrom = props.userFrom\n    const movieTitle = props.movieInfo.title\n    const moviePost = props.movieInfo.backdrop_path\n    const movieRunTime = props.movieInfo.runtime\n\n    const [FavoriteNumber, setFavoriteNumber] = useState(0)\n    const [Favorited, setFavorited] = useState(false)\n    const variables = {\n        movieId: movieId,\n        userFrom: userFrom,\n        movieTitle: movieTitle,\n        moviePost: moviePost,\n        movieRunTime: movieRunTime\n    }\n\n    const onClickFavorite = () => {\n\n        if (user.userData && !user.userData.isAuth) {\n            return history.push(\"/\");\n        }\n\n        if (Favorited) {\n            //when we are already subscribed \n            axios.post('/api/favorite/removeFromFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber - 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        history.push(\"/\");\n                    }\n                })\n\n        } else {\n            // when we are not subscribed yet\n\n            axios.post('/api/favorite/addToFavorite', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        setFavoriteNumber(FavoriteNumber + 1)\n                        setFavorited(!Favorited)\n                    } else {\n                        history.push(\"/\");\n                    }\n                })\n        }\n    }\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchFavoriteNumber = () => {\n            axios.post('/api/favorite/favoriteNumber', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        mounted && setFavoriteNumber(response.data.subscribeNumber)\n                    } else {\n                        history.push(\"/\");\n                    }\n                })\n                .catch((\n                    error => { console.log(error) }\n                ))\n        }\n        fetchFavoriteNumber();\n        return () => { mounted = false; }\n    }, [props, history, variables])\n\n    useEffect(() => {\n        let mounted = true;\n        const fetchFavorited = () => {\n            axios.post('/api/favorite/favorited', variables)\n                .then(response => {\n                    if (response.data.success) {\n                        mounted && setFavorited(response.data.subcribed)\n                    } else {\n                        history.push(\"/\");\n                    }\n                })\n        }\n        fetchFavorited();\n        return () => {mounted = false;}\n    }, [props, variables, history])\n\n    return (\n        <>\n            <Button type=\"primary\" onClick={onClickFavorite}>\n                {!Favorited ? t('favorites.add') : t('favorites.remove')}{!Favorited ? <PopcornIcon type=\"icon-popcorn\" style={{ fontSize: \"20px\" }} />\n                    : <PopcornColorIcon type=\"icon-popcorn1\" style={{ fontSize: \"20px\" }} />}{FavoriteNumber}\n            </Button>\n        </>\n    )\n}\n\nexport default Favorite\n\n","import React, { useState } from 'react'\nimport { IMAGE_BASE_URL, IMAGE_SIZE, POSTER_SIZE } from '../../../Config'\nimport moment from 'moment';\nimport numeral from 'numeral';\nimport { useTranslation } from 'react-i18next';\nimport { createFromIconfontCN, YoutubeOutlined} from '@ant-design/icons';\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport useStyles from '../style';\nimport { Badge, Modal, Button } from 'antd';\nimport Favorite from '../Sections/Favorite';\nimport { Link } from 'react-router-dom';\n\nfunction MovieInfo(props) {\n\n  const [visible, setVisible] = useState(false);\n  const classes = useStyles();\n  const { t } = useTranslation();\n\n  const calcTime = (time) => {\n    const hours = Math.floor(time / 60);\n    let mins = time % 60;\n    if (mins < 10) { mins = \"0\" + mins; }\n    return `${hours}h ${mins}min`;\n  }\n\n  const { movie, directors, cast, trailer } = props;\n\n  const VoteColors = {\n    UNKNOWN: '#999',\n    BAD: '#cd5c5c',\n    OK: '#ffa500',\n    EXCELLENT: '#52c41a'\n  }\n\n  function getScoreColor(score) {\n    let color = VoteColors.EXCELLENT\n    if (!score || movie.vote_average === 0) color = VoteColors.UNKNOWN\n    else if (score < 5.5) color = VoteColors.BAD\n    else if (score < 7) color = VoteColors.OK\n\n    return color\n  }\n\n  const BadgeColor = getScoreColor(movie.vote_average)\n\n  const overviewLength = 700;\n\n  const MovieInfoIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_3easwvxbvnh.js',\n  });\n\n\n  var videoArray = [];\n  var embedLink = '';\n  if (trailer.length > 0) {\n    var i;\n    for (i = 0; i < trailer.length; i++) {\n      if (trailer[i].type === 'Trailer') {\n        videoArray.push(trailer[i].key);\n      }\n    }\n    if (videoArray.length > 0) {\n      embedLink = 'https://www.youtube.com/embed/' + videoArray[0] + '?&autoplay=1';\n    }\n  }\n\n  const showModal = () => {\n    setVisible(true);\n  }\n\n  const handleCancel = () => {\n    setVisible(false);\n  }\n\n  const stopVideo = 'https://www.youtube.com/embed/' + videoArray[0] + '?&autoplay=0';\n  const youtubeLink = visible ? embedLink : stopVideo;\n\n  return (\n    <main style={{ position: 'relative' }}>\n      <div className={classes.backdrop}>\n        <img className={classes.backdropImage} src={movie.backdrop_path ? `${IMAGE_BASE_URL}${IMAGE_SIZE}${movie.backdrop_path}` : \"https://res.cloudinary.com/dkyqbngya/image/upload/v1586787757/detykqycj7ejezsjmxln.png\"} alt=\"\" />\n      </div>\n      <Container className={classes.movieContainer}>\n        <Grid container spacing={7}>\n          <Grid item md={3}>\n            <img className={classes.poster} src={movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` : t('landing.notAvail')} alt={\"Poster of \" + movie.title} />\n          </Grid>\n          <Grid item md={8} style={{ color: 'white' }}>\n            <div className={classes.releaseDate}>\n              <h2 style={{ color: \"white\" }}>{movie.release_date\n                ? moment(new Date(movie.release_date)).format('YYYY') : 'N/A'}\n              </h2>\n            </div>\n            <Typography variant={\"h4\"} style={{ fontWeight: 'bold', color: 'white' }} component={\"h1\"}>\n              <MovieInfoIcon type=\"icon-movie1\" style={{ fontSize: \"30px\", paddingRight: \"10px\" }} />{movie.title}\n            </Typography>\n            {movie.genres.length ?\n              <ul className={classes.genreList}>\n                {movie.genres.map((element, iterator) => {\n                  return <Link to={{ pathname: `/landing/genre/${element.name}/${element.id}` }} key={iterator}><li className={classes.genre} key={element.id}>{element.name}</li></Link>\n                })}\n              </ul>\n              :\n              null\n            }\n\n            <div className={classes.vote}>\n              <span style={{ margin: '2px 0px 0 6px' }}>\n                <Badge\n                  style={{ backgroundColor: BadgeColor, marginRight: 16 }}\n                  offset={[0, 0]}\n                  count={movie.vote_average}>\n                </Badge>\n                <Favorite movieInfo={movie} movieId={movie.id} userFrom={localStorage.getItem('userId')} />\n              \n              \n                {\n              trailer ?\n                <>\n                  <Button type=\"primary\" style={{margin: \"15px\"}} onClick={showModal}>\n                  <YoutubeOutlined style={{fontSize: \"20px\"}}/> {t(\"movieInfo.trailer\")}\n                        </Button>\n                  <Modal\n                    title={`${t('movieInfo.trailerTitle')} ${movie.title} ${t('movieInfo.watchHyper')}`}\n                    visible={visible}\n                    onCancel={handleCancel}\n                    width={610}\n                    style={{ top: 20 }}\n                    footer={[\n                      <Button type=\"primary\" key=\"Close\" onClick={handleCancel}>\n                        {t(\"movieInfo.close\")}\n                      </Button>\n                    ]}\n                  >\n                    <div className=\"iframe-container\">\n                    <iframe\n                      title={movie.title}\n                      width=\"560\"\n                      height=\"315\"\n                      src={youtubeLink}\n                      frameBorder=\"0\"\n                      sameSite=\"none; secure\"\n                      Secure\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen>\n                    </iframe>\n                    </div>\n                  </Modal>\n                </>\n                :\n                null\n            }\n              \n              \n              </span>\n            </div>\n            <div style={{ marginTop: 10, marginBottom: 10 }}>\n              <Typography component={\"div\"} style={{ marginRight: 15 }}>\n                <b>{t('movieInfo.runtime')}</b> {movie.runtime ? calcTime(movie.runtime) : 'N/A'}\n              </Typography>\n              <Typography component={\"div\"}>\n                <b>{t('movieInfo.movietitle')}</b> {movie.original_title}\n              </Typography>\n              <Typography component={\"div\"}>\n              <b>{t('movieInfo.actors')}</b> {cast.map((element) => {\n                  return element.name;\n                }).slice(0, 5).join(\", \")}\n                <br />\n                <b>{t('movieInfo.director')}</b> {directors.map((element) => {\n                  return element.name;\n                }).join(\", \")}\n                <br />\n                <b>{t('movieInfo.prod')}</b> {movie.production_companies.map(function (company) {\n                  return company.name;\n                }).shift()}\n              </Typography>\n            </div>\n            {movie.overview && <React.Fragment>\n              <h4 className={classes.subtitle}>{t('movieInfo.overview')}</h4>\n              <Typography variant={\"body1\"}>{movie.overview && movie.overview.length > overviewLength ? movie.overview.substring(0, overviewLength) + \"...\" : movie.overview}</Typography>\n            </React.Fragment>}\n            <div style={{ marginTop: 20 }}>\n              <Typography component={\"div\"}>\n                <b>{t('movieInfo.budget')}</b> {movie.budget ? numeral(movie.budget).format('0,0[.]00 $') : 'N/A'}\n              </Typography>\n              <Typography component={\"div\"}>\n                <b>{t('movieInfo.revenue')}</b> {movie.revenue ? numeral(movie.revenue).format('0,0[.]00 $') : 'N/A'}\n              </Typography>\n            </div>\n          </Grid>\n        </Grid>\n      </Container>\n    </main>\n  )\n}\n\nexport default MovieInfo\n","import React from 'react';\nimport { API_KEY, CurrentLanguage , IMAGE_BASE_URL, POSTER_SIZE} from '../../../Config'\nimport { withTranslation } from 'react-i18next';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { Typography, Row } from 'antd';\nimport GridCard from '../../../commons/GridCards'\n\nconst { Title } = Typography;\n\nconst MovieIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_cpuj79al49d.js',\n});\n\nclass RecommendedMovies extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: ''\n        }\n\n        if (props.type === 'Recommended Movies') {\n            fetch('https://api.themoviedb.org/3/movie/' + this.props.urlParams + '/recommendations?api_key=' + API_KEY + '&language=' + CurrentLanguage)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ data: res.results });\n                })\n                .catch(error => console.error('Error:', error))\n        }\n    }\n\n    render() {\n        const { t } = this.props\n        // if (!this.state.data) return \"\";\n        if (this.state.data === '') return ('');\n        else {\n            let data_arr = [];\n            for (let i in this.state.data.slice(0, 5)) {\n                if (this.state.data[i].vote_count > 2300 && this.state.data[i].backdrop_path !== null && this.state.data[i].overview !== null)\n\n                    data_arr.push(\n                        <React.Fragment key={i}>\n                        <GridCard movie\n                        className=\"similar_movies\"\n                            image={ this.state.data[i].poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${ this.state.data[i].poster_path}` : t('landing.notAvail')}\n                            movieId={ this.state.data[i].id}\n                            movieName={ this.state.data[i].title}\n                            date={ this.state.data[i].release_date}\n                            vote={ this.state.data[i].vote_average ?  this.state.data[i].vote_average : 'N/A'}\n                        />\n                        </React.Fragment>\n                    )\n            }\n\n            return (\n                <div>\n                    <Title level={3}><MovieIcon type=\"icon-movie\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{t('movie.recommended')}</Title>\n                    <hr />\n                    <br />\n                    <Row gutter={[16, 16]}>\n                        {this.state.data.length === 0 ? \n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px' }}>\n                            {t(\"movie.recoNone\")}\n                            </div> : data_arr}\n                    </Row>\n                </div>\n            )\n        }\n    }\n}\n\nexport default withTranslation()(RecommendedMovies);","import React from 'react';\nimport { API_KEY, CurrentLanguage , IMAGE_BASE_URL, POSTER_SIZE} from '../../../Config'\nimport { withTranslation } from 'react-i18next';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { Typography, Row } from 'antd';\nimport GridCard from '../../../commons/GridCards'\n\nconst { Title } = Typography;\n\nconst MovieIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_cpuj79al49d.js',\n});\n\nclass SimilarMovies extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: ''\n        }\n\n        if (props.type === 'Similar Movies') {\n            fetch('https://api.themoviedb.org/3/movie/' + this.props.urlParams + '/similar?api_key=' + API_KEY + '&language=' + CurrentLanguage)\n                .then(res => res.json())\n                .then(res => {\n                    this.setState({ data: res.results });\n                })\n                .catch(error => console.error('Error:', error))\n        }\n    }\n\n    render() {\n        const { t } = this.props\n        if (!this.state.data) return \"\";\n        if (this.state.data === '') return ('');\n        else {\n            let data_arr = [];\n            for (let i in this.state.data.slice(0, 5)) {\n                if (this.state.data[i].vote_count > 2300 && this.state.data[i].backdrop_path !== null && this.state.data[i].overview !== null)\n\n                    data_arr.push(\n                        <React.Fragment key={i}>\n                        <GridCard movie\n                        className=\"similar_movies\"\n                            image={ this.state.data[i].poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${ this.state.data[i].poster_path}` : t('landing.notAvail')}\n                            movieId={ this.state.data[i].id}\n                            movieName={ this.state.data[i].title}\n                            date={ this.state.data[i].release_date}\n                            vote={ this.state.data[i].vote_average ?  this.state.data[i].vote_average : 'N/A'}\n                        />\n                        </React.Fragment>\n                    )\n            }\n\n            return (\n                <div>\n                    <Title level={3}><MovieIcon type=\"icon-movie\" style={{ fontSize: \"35px\", paddingRight: \"10px\" }} />{t('movie.similar')}</Title>\n                    <hr />\n                    <br />\n                    <Row gutter={[16, 16]}>\n                        {this.state.data.length === 0 ? \n                        <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100px' }}>\n                            {t(\"movie.similarNone\")}\n                            </div> : data_arr }\n                    </Row>\n                </div>\n            )\n        }\n    }\n}\n\nexport default withTranslation()(SimilarMovies);","import React, { useEffect, useState } from 'react'\nimport { message, Typography } from 'antd';\nimport { Row } from 'antd';\nimport useStyles from './style';\nimport axios from 'axios';\nimport Comments from './Sections/Comments'\nimport LikeDislikes from './Sections/LikeDislikes';\nimport { API_URL, API_KEY } from '../../Config'\nimport GridCards from '../../commons/GridCards';\nimport MovieInfo from './Sections/MovieInfo';\nimport Spinner from '../LandingPage/Sections/Spinner';\nimport RecommendedMovies from './Sections/Recommended';\nimport SimilarMovies from './Sections/Similar';\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { Button } from '@material-ui/core';\n\nfunction MovieDetailPage(props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n    const CurrentLanguage = localStorage.getItem('language')\n    const { Title } = Typography;\n    const movieId = props.match.params.movieId\n    const [Movie, setMovie] = useState([])\n    const [Directors, setDirectors] = useState([])\n    const [Trailer, setTrailer] = useState([])\n    const [Casts, setCasts] = useState([])\n    const [CommentLists, setCommentLists] = useState([])\n    const [LoadingForMovie, setLoadingForMovie] = useState(true)\n    const [LoadingForCasts, setLoadingForCasts] = useState(true)\n    const [ActorToggle, setActorToggle] = useState(false)\n\n    const StreamTitleIcon = createFromIconfontCN({\n        scriptUrl: '//at.alicdn.com/t/font_1804216_vq7xtyn73yj.js',\n    });\n    const postId = props.match.params.movieId;\n    // const { movie } = props;\n\n    let variable = {\n        postId: postId\n    }\n\n    const user = useSelector(state => state.user)\n\n    var videoArray = [];\n    var embedLink = '';\n    if (Trailer.length > 0) {\n      var i;\n      for (i = 0; i < Trailer.length; i++) {\n        if (Trailer[i].type === 'Trailer') {\n          videoArray.push(Trailer[i].key);\n        }\n      }\n      if (videoArray.length > 0) {\n        embedLink = 'https://www.youtube.com/embed/' + videoArray[0];\n      }\n    }\n\n    useEffect(() => {\n        // new endpoint not based on most popular like landing page but movie id\n        let _mounted = true;\n        const fetchDetailInfo = (endpoint) => {\n\n            fetch(endpoint)\n                .then(result => result.json())\n                .then(result => {\n                    if (result.status_code) {\n                        _mounted && setLoadingForMovie(true);\n                        message.error(t(\"landing.nomovie\"));\n                        props.history.push(\"/landing\");\n                    } else {\n                        _mounted && setMovie(result)\n                        _mounted && setLoadingForMovie(false)\n\n                        let endpointForCasts = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n                       const videoLang = () => {\n                            const CurrentLanguage = localStorage.getItem('language')\n                            if (CurrentLanguage) return `${API_URL}movie/${movieId}/videos?api_key=${API_KEY}&language=${CurrentLanguage}`\n                            else return `${API_URL}movie/${movieId}/videos?api_key=${API_KEY}`\n                        }\n                        let endpointTrailer = videoLang();\n                        fetch(endpointForCasts)\n                            .then(result => result.json())\n                            .then(result => {\n                                _mounted && setCasts(result.cast);\n                                const Directors = result.crew.filter((member) => member.job === \"Director\");\n                                _mounted && setDirectors(Directors);\n                            })\n                        setLoadingForCasts(false)\n                        fetch(endpointTrailer)\n                            .then(result => result.json())\n                            .then(result => {\n                                _mounted && setTrailer(result.results);\n                            })\n                    }\n                })\n                .catch(error => console.error('Error:', error)\n                )\n        }\n        // console.log(movieSources)\n\n        let endpointForMovieInfo = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=${CurrentLanguage}`;\n        fetchDetailInfo(endpointForMovieInfo)\n\n        axios.post('/api/comment/getComments', variable)\n            .then(response => {\n                // console.log(\"get comments \", response)\n                if (response.data.success) {\n                    // console.log('response.data.comments ', response.data.comments)\n                    _mounted && setCommentLists(response.data.comments)\n                } else {\n                    props.history.push(\"/login\");\n                }\n            })\n        return () => { _mounted = false }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [movieId, t, props, CurrentLanguage])\n\n    const toggleActorView = () => {\n        setActorToggle(!ActorToggle)\n    }\n\n    const updateComment = (newComment) => {\n        setCommentLists(CommentLists.concat(newComment))\n    }\n\n    return (\n        <div>\n            {user.userData && user.userData.isAuth ?\n                <>\n                    {/* Movie Info */}\n                    {!LoadingForMovie && Trailer ?\n                        <MovieInfo movie={Movie} directors={Directors} cast={Casts} trailer={Trailer} />\n                        :\n                        <div><Spinner /></div>\n                    }\n\n\n                    {/* Body */}\n                    <div style={{ width: '85%', margin: '1rem auto' }}>\n\n                        {/* Actors Grid*/}\n\n                        {!LoadingForMovie ?\n                            <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\n                                <Button variant=\"contained\" className={classes.buttonActors} onClick={toggleActorView}>{ActorToggle ? t('movie.dontShowActors') : t('movie.showActors')}</Button>\n                            </div>\n                            :\n                            null\n                        }\n                        {ActorToggle &&\n                            <Row gutter={[16, 16]}>\n                                {\n                                    !LoadingForCasts ? Casts.map((cast, index) => (\n                                        cast.profile_path &&\n                                        <React.Fragment key={cast.id}>\n                                            <GridCards actor image={cast.profile_path} actorName={cast.name} charName={cast.character} />\n                                        </React.Fragment>\n                                    )) :\n                                        <div><Spinner /></div>\n                                }\n                            </Row>\n                        }\n                        <br />\n\n\n                        {/* Stream */}\n\n                        <Title level={3}>\n                            <StreamTitleIcon type=\"icon-movie2\" style={{ fontSize: \"28px\", paddingRight: \"10px\" }} />{t('movie.streamTitle')} {Movie.title}</Title>\n                        <hr />\n                        <br />\n                        <label ><p style={{ color: '#ff0000bf', textAlign: 'center', fontSize: '1rem', border: '1px solid', padding: '0.5rem', borderRadius: '10px' }}>\n                  For legal reasons - this demo only allows you to watch the associated Youtube trailer.\n                  </p></label>\n                        <div style={{ display: 'flex', justifyContent: 'center', margin: '2rem' }}>\n                        <div className=\"iframe-container\">\n                    <iframe\n                      title={Movie.title}\n                      width=\"560\"\n                      height=\"315\"\n                      src={embedLink}\n                      frameBorder=\"0\"\n                      sameSite=\"none; secure\"\n                      Secure\n                      allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n                      allowFullScreen>\n                    </iframe>\n                    </div>\n                        </div>\n                    \n                        <div style={{ display: 'flex', justifyContent: 'center' }}>\n                            <LikeDislikes video videoId={movieId} userId={localStorage.getItem('userId')} />\n                        </div>\n\n                        {/* Comments */}\n                        <Comments movieTitle={Movie.title} CommentLists={CommentLists} postId={postId} refreshFunction={updateComment} />\n\n                        <br />\n                        {/* Recommended Movies */}\n                        {!LoadingForMovie ?\n                            <div><RecommendedMovies type=\"Recommended Movies\" urlParams={movieId} /></div>\n                            :\n                            null\n                        }\n                        {/* <br /> */}\n                        {/* Similar Movies */}\n                        {!LoadingForMovie ?\n                            <div><SimilarMovies type=\"Similar Movies\" urlParams={movieId} /></div>\n                            :\n                            null\n                        }\n                    </div>\n                </>\n                : <Spinner />}\n        </div>\n    )\n}\n\nexport default MovieDetailPage\n","import React, { useEffect, useState } from 'react'\nimport { Typography, Popover, Button } from 'antd';\nimport axios from 'axios';\nimport './favorite.css';\nimport { useTranslation } from 'react-i18next';\nimport { ClockCircleOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../Config'\nimport { createFromIconfontCN } from '@ant-design/icons';\nimport { useHistory } from 'react-router-dom';\n\nconst { Title } = Typography;\n\nconst MovieInfoIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_3easwvxbvnh.js',\n});\n\nconst PopcornIcon = createFromIconfontCN({\n    scriptUrl: '//at.alicdn.com/t/font_1804216_05evm2uwptc9.js',\n});\n\nfunction FavoritePage() {\n    const { t } = useTranslation();\n\n    const [Favorites, setFavorites] = useState([])\n    const [Loading, setLoading] = useState(true)\n    const history = useHistory();\n    let variable = { userFrom: localStorage.getItem('userId') }\n\n    const calcTime = (time) => {\n        const hours = Math.floor(time / 60);\n        let mins = time % 60;\n        if (mins < 10) { mins = \"0\" + mins; }\n        return `${hours}h ${mins}min`;\n    }\n\n    useEffect(() => {\n        fetchFavoredMovie()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const fetchFavoredMovie = () => {\n        axios.post('/api/favorite/getFavoredMovie', variable)\n            .then(response => {\n                if (response.data.success) {\n                    // console.log(response.data.favorites)\n                    setFavorites(response.data.favorites)\n                    setLoading(false)\n                } else {\n                    history.push(\"/login\");\n                }\n            })\n    }\n\n    const onClickDelete = (movieId, userFrom) => {\n\n        const variables = {\n            movieId: movieId,\n            userFrom: userFrom,\n        }\n\n        axios.post('/api/favorite/removeFromFavorite', variables)\n            .then(response => {\n                if (response.data.success) {\n                    fetchFavoredMovie()\n                } else {\n                    history.push(\"/login\");\n                }\n            })\n    }\n\n    const renderCards = Favorites.map((favorite, index) => {\n\n\n        const content = (\n            <div>\n                {favorite.moviePost ?\n                    <img src={`${IMAGE_BASE_URL}${POSTER_SIZE}${favorite.moviePost}`} alt=\"\" />\n                    : \"no image\"}\n            </div>\n        );\n\n        return <tr key={favorite._id}>\n\n            <Popover content={content} title={`${favorite.movieTitle}`}>\n                <td><MovieInfoIcon type=\"icon-movie1\" style={{ fontSize: \"20px\", paddingRight: \"10px\" }} /><strong><a style={{ color: \"black\" }} href={`/movie/${favorite.movieId}`}>{favorite.movieTitle}</a></strong></td>\n            </Popover>\n\n            <td><center><ClockCircleOutlined style={{ paddingRight: \"10px\" }} />{calcTime(favorite.movieRunTime)}</center></td>\n            <td><center><Button type=\"primary\" onClick={() => onClickDelete(favorite.movieId, favorite.userFrom)}><DeleteOutlined />{t('favorites.removeButton')}</Button></center></td>\n        </tr>\n    })\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <Title level={2}><PopcornIcon type=\"icon-popcorn\" style={{ paddingRight: \"10px\" }} />{t('favorites.title')}</Title>\n            <hr />\n            <br />\n            {!Loading &&\n                <table>\n                    <thead>\n                        <tr>\n                            <th><MovieInfoIcon type=\"icon-movie1\" style={{ fontSize: \"20px\", paddingRight: \"10px\" }} />{t('favorites.movieTitle')}</th>\n                            <th><center><ClockCircleOutlined style={{ paddingRight: \"10px\" }} />{t('favorites.movieRuntime')}</center></th>\n                            <th><center><DeleteOutlined style={{ paddingRight: \"10px\" }} />{t('favorites.remove')}</center></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {renderCards}\n                    </tbody>\n                </table>\n            }\n        </div>\n    )\n}\n\nexport default FavoritePage\n","import React from 'react'\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport * as API from \"../../../_actions/user_actions\";\nimport { useTranslation } from 'react-i18next';\nimport { LockOutlined } from '@ant-design/icons';\nimport { Typography } from 'antd';\nimport { store } from \"react-notifications-component\";\nimport {\n    Form,\n    Input,\n    Button,\n} from 'antd';\n\nconst { Title } = Typography;\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 20 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 14 },\n        sm: { span: 6 },\n    },\n};\nconst tailFormItemLayout = {\n    wrapperCol: {\n        xs: {\n            span: 20,\n            offset: 0,\n        },\n        sm: {\n            span: 14,\n            offset: 8,\n        },\n    },\n};\n\n\nfunction ResetPass() {\n    const { t } = useTranslation();\n    return (\n        <React.Fragment>\n            <Formik\n                initialValues={{\n                    password: '',\n                }}\n                validationSchema={Yup.object().shape({\n                    password: Yup.string()\n                        .min(4, t('register.passwordMin'))\n                        .max(15, t('register.passwordMax'))\n                        //DECOMMENTER AVANT PUSH FINAL\n                        // .matches(\n                        //   /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{6,}$/,\n                        //   t('register.passRegex')\n                        // )\n                        .required(t('register.passwordErr')),\n                    password_confirm: Yup.string()\n                        .oneOf([Yup.ref('password'), null], t('register.passwordMatch'))\n                        .required(t('register.cpasswordErr')),\n                })}\n                onSubmit={(values, { setSubmitting }) => {\n                    setTimeout(() => {\n\n                        API.resetPasswordProfile(values.password, values.password_confirm)\n                            .then(response => {\n                                if (response.status === 200) {\n                                    store.addNotification({\n                                        message: t('editProfile.newpassok'),\n                                        insert: \"top\",\n                                        type: 'success',\n                                        container: \"top-right\",\n                                        animationIn: [\"animated\", \"fadeIn\"],\n                                        animationOut: [\"animated\", \"fadeOut\"],\n                                        dismiss: {\n                                            duration: 5000,\n                                            onScreen: true\n                                        }\n                                    });\n                                } else {\n                                    alert('Password Update Fail')\n                                }\n                            })\n                        setSubmitting(false);\n                    }, 500);\n                }}\n            >\n                {props => {\n                    const {\n                        errors,\n                        values,\n                        touched,\n                        isSubmitting,\n                        handleChange,\n                        handleBlur,\n                        handleSubmit,\n                    } = props;\n                    return (\n                        <div style={{ width: '85%', margin: '3rem auto' }}>\n                        <Title level={2}><LockOutlined style={{ paddingRight: \"10px\" }} />{t(\"editProfile.editPassword\")}</Title>\n                            <hr />\n                            <br />\n                        <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit}>\n                            <Input type=\"text\" name=\"username\" value=\"\" autoComplete=\"username\" style={{ display: 'none' }} />\n                            <Form.Item required label={t('editProfile.newpass')} hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"password\"\n                                    prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder={t('register.passwordForm')}\n                                    type=\"password\"\n                                    name=\"password\"\n                                    autoComplete=\"current-password\"\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.password}\n                                    className={\n                                        errors.password && touched.password ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.password && touched.password && (\n                                    <div className=\"input-feedback\">{errors.password}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item required label={t('editProfile.newcpass')} hasFeedback validateStatus={errors.password_confirm && touched.password_confirm ? \"error\" : 'success'}>\n                                <Input\n                                    id=\"password_confirm\"\n                                    prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                    placeholder={t('register.cpasswordForm')}\n                                    type=\"password\"\n                                    name=\"password_confirm\"\n                                    autoComplete=\"current-password\"\n                                    value={values.password_confirm}\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    className={\n                                        errors.password_confirm && touched.password_confirm ? 'text-input error' : 'text-input'\n                                    }\n                                />\n                                {errors.password_confirm && touched.password_confirm && (\n                                    <div className=\"input-feedback\">{errors.password_confirm}</div>\n                                )}\n                            </Form.Item>\n\n                            <Form.Item {...tailFormItemLayout}>\n                                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                                    {t('editProfile.updatePass')}\n                                </Button>\n                            </Form.Item>\n                        </Form>\n                        </div>\n                    )\n                }}\n            </Formik>\n        </React.Fragment>\n    )\n}\nexport default ResetPass","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { updateUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\nimport { message, Typography, Avatar } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport ResetPass from './ResetPass';\nimport { UserOutlined } from '@ant-design/icons';\nimport Spinner from '../LandingPage/Sections/Spinner';\nimport { store } from \"react-notifications-component\";\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst { Title } = Typography;\n\nconst formItemLayout = {\n  labelCol: {\n      xs: { span: 20 },\n      sm: { span: 8 },\n  },\n  wrapperCol: {\n      xs: { span: 14 },\n      sm: { span: 6 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n      xs: {\n          span: 20,\n          offset: 0,\n      },\n      sm: {\n          span: 14,\n          offset: 8,\n      },\n  },\n};\n\n\nfunction ProfilePage() {\n  const { t, i18n } = useTranslation();\n  const user = useSelector(state => state.user);\n  const [loading, setLoading] = useState(false);\n  const [image, setImage] = useState('');\n  const [content, setContent] = React.useState(\"\");\n  const [UserID, setUserID] = useState([]);\n  const imageInputRef = React.useRef();\n  const history = useHistory();\n  var allowedTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\"];\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n  let language = i18n.language;\n\n  function onChange(e) {\n    changeLanguage(e.target.value);\n    localStorage.setItem(\"language\", e.target.value);\n  }\n\n  useEffect(() => {\n    axios.get('/api/users/:userId')\n      .then(response => {\n        if (response.data.success) {\n          setUserID(response.data.users)\n        } else {\n          history.push(\"/login\");\n        }\n      })\n  }, [history])\n\n  const uploadImage = e => {\n    e.preventDefault();\n    setContent(e.target.value)\n    const files = e.target.files[0];\n    const cloudName = \"dkyqbngya\";\n    const unsignedUploadPreset = \"f7r0dz2t\";\n    var url = `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`;\n    if (!files || files.length === 0)\n      return;\n    if (files) {\n      var extension = files.name.replace(/.*\\./, '').toLowerCase();\n      if (allowedTypes.indexOf(extension) < 0) {\n        message.error(`${files.type}${t('register.imgFormat')}`)\n        imageInputRef.current.value = \"\";\n        setContent(\"\");\n        setImage(\"\"); \n        return;\n      }\n      if (files.size > 150000) {\n        message.error(`${files.name}${t('register.imgTooLarge')}`)\n        imageInputRef.current.value = \"\";\n        setContent(\"\");\n        setImage(\"\"); \n        return;\n      }\n      else {\n        var fd = new FormData();\n        fd.append(\"file\", files);\n        fd.append(\"upload_preset\", unsignedUploadPreset);\n        setLoading(true);\n        const config = {\n          headers: { \"X-Requested-With\": \"XMLHttpRequest\" },\n        };\n        axios.post(url, fd, config)\n          .then(res => {\n            setLoading(false)\n            var url = res.data.secure_url;\n            var resize = url.split('/');\n            resize.splice(-3, 0, 'w_125,c_scale');\n            var img = new Image();\n            img.src = resize.join('/');\n            setImage(img.src)\n          })\n          .catch((err) => {\n            if (err) {\n              switch (err.response.status) {\n                case 400:\n                  message.error(t('register.imgInvalid'))\n                  break;\n                case 404:\n                  message.error(t('register.imgNotFound'))\n                  break;\n                case 500:\n                  message.error(t('register.imgError'))\n                  break;\n                default:\n                  break;\n              }\n            }\n          })\n      }\n    }\n  }\n\n  const dispatch = useDispatch();\n    return (\n      user.userData && user.userData.isAuth ?\n    UserID.map((info, index) => (\n      <React.Fragment key={info._id}>\n        <Formik\n          initialValues={{\n            email: info.email,\n            firstName: info.firstName,\n            lastName: info.lastName,\n            username: info.username,\n            image: image,\n            lang: language,\n          }}\n          validationSchema={Yup.object().shape({\n            username: Yup.string()\n              .required(t('register.usernameErr'))\n              .matches(/^[A-Za-z0-9_]{2,20}$/, t('register.usernameRules'))\n              .min(2, t('register.usernameMin'))\n              .max(20, t('register.usernameMax')),\n            firstName: Yup.string()\n              .required(t('register.firstNameErr'))\n              .matches(/^[A-Z]+$/i, t('register.firstNameAlpha'))\n              .min(2, t('register.firstNameMin'))\n              .max(20, t('register.firstNameMax')),\n            lastName: Yup.string()\n              .required(t('register.lastNameErr'))\n              .matches(/^[A-Z]+$/i, t('register.lastNameAlpha'))\n              .min(2, t('register.lastNameMin'))\n              .max(20, t('register.lastNameMax')),\n            email: Yup.string()\n              .email(t('register.emailInvalid'))\n              .required(t('register.emailErr')),\n          })}\n          onSubmit={(info, { setSubmitting }) => {\n            setTimeout(() => {\n\n              let dataToSubmit = {\n                email: info.email,\n                username: info.username,\n                firstName: info.firstName,\n                lastName: info.lastName,\n                image: image,\n                lang: language,\n              };\n\n              dispatch(updateUser(dataToSubmit)).then(response => {\n                if (response.payload.success) {\n                  store.addNotification({\n                    message: t('editProfile.profileUpdated'),\n                    insert: \"top\",\n                    type: 'success',\n                    container: \"top-right\",\n                    animationIn: [\"animated\", \"fadeIn\"],\n                    animationOut: [\"animated\", \"fadeOut\"],\n                    dismiss: {\n                      duration: 5000,\n                      onScreen: true\n                    }\n                  });\n                } else {\n                  alert(response.payload.err)\n                }\n              })\n              setSubmitting(false);\n            }, 500);\n          }}\n        >\n          {props => {\n            const {\n              errors,\n              touched,\n              isSubmitting,\n              handleChange,\n              handleBlur,\n              handleSubmit,\n            } = props;\n            return (\n\n              <div style={{ width: '85%', margin: '3rem auto' }}>\n\n                <Title level={2}><UserOutlined style={{paddingRight: \"10px\"}}/>{t(\"editProfile.title\")}</Title>\n                <hr />\n                <br />\n                <main style={{ position: 'relative' }}>\n                <Form key={info._id} style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit}>\n                  <Form.Item required label={t('editProfile.avatar')}>\n                    <div name=\"image\" className=\"imagePreview\" >\n                    {image ? <Avatar src={image} size={130}/>\n                    : \n                    loading ? <Spinner /> : \n                    <Avatar src={info.image} alt=\"\" size={130}/>}\n                    </div>\n                    <Input\n                      id=\"image\"\n                      type=\"file\"\n                      name=\"image\"\n                      accept=\"image/*\"\n                      ref={imageInputRef} \n                      onChange={uploadImage}\n                      value={content}\n                      onBlur={handleBlur}\n                    />\n                  </Form.Item>\n\n                  <Form.Item required label={t(\"editProfile.prefLang\")}>\n                    <select defaultValue={language} onChange={onChange}>\n                      <option value=\"en-US\">{t(\"navbar.lngEN\")}</option>\n                      <option value=\"fr-FR\">{t(\"navbar.lngFR\")}</option>\n                    </select>\n                  </Form.Item>\n\n                  <Form.Item required label={t('register.username')}>\n                    <Input\n                      id=\"username\"\n                      type=\"text\"\n                      autoComplete=\"username\"\n                      defaultValue={info.username}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={\n                        errors.username && touched.username ? 'text-input error' : 'text-input'\n                      }\n                    />\n                    {errors.username && touched.username && (\n                      <div className=\"input-feedback\">{errors.username}</div>\n                    )}\n                  </Form.Item>\n\n                  <Form.Item required label={t('register.firstName')}>\n                    <Input\n                      id=\"firstName\"\n                      type=\"text\"\n                      defaultValue={info.firstName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={\n                        errors.firstName && touched.firstName ? 'text-input error' : 'text-input'\n                      }\n                    />\n                    {errors.firstName && touched.firstName && (\n                      <div className=\"input-feedback\">{errors.firstName}</div>\n                    )}\n                  </Form.Item>\n\n                  <Form.Item required label={t('register.lastName')}>\n                    <Input\n                      id=\"lastName\"\n                      type=\"text\"\n                      defaultValue={info.lastName}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={\n                        errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                      }\n                    />\n                    {errors.lastName && touched.lastName && (\n                      <div className=\"input-feedback\">{errors.lastName}</div>\n                    )}\n                  </Form.Item>\n\n                  <Form.Item required label={t('register.email')}>\n                    <Input\n                      id=\"email\"\n                      type=\"email\"\n                      autoComplete=\"email\"\n                      defaultValue={info.email}\n                      onChange={handleChange}\n                      onBlur={handleBlur}\n                      className={\n                        errors.email && touched.email ? 'text-input error' : 'text-input'\n                      }\n                    />\n                    {errors.email && touched.email && (\n                      <div className=\"input-feedback\">{errors.email}</div>\n                    )}\n                  </Form.Item>\n\n                  <Form.Item {...tailFormItemLayout}>\n                    <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                      {t('editProfile.update')}\n                    </Button>\n                  </Form.Item>\n                </Form>\n                </main>\n              </div>\n            )\n          }}\n        </Formik>\n            <br />\n        <ResetPass />\n      </React.Fragment>\n    ))\n    :\n    <Spinner />\n  )\n}\nexport default ProfilePage","import { useState, useEffect } from 'react';\nimport * as API from \"../../../_actions/user_actions\";\nimport {store} from \"react-notifications-component\";\nimport { useTranslation } from 'react-i18next';\n\n\nexport default function ForgotPassword(props) {\n    const [mounted, setMounted] = useState(false);\n    const { t } = useTranslation();\n    useEffect(() => {\n      function activeAccount() {\n           API.activeAccount(props.match.params.tokenConf)\n                .then((res=> {\n                    // console.log(\"res status is : \",res)\n                    if (res.status === 200) {\n                        store.addNotification({\n                            message: t('login.activated'),\n                            insert: \"top\",\n                            type: 'success',\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 5000,\n                                onScreen: true\n                            }\n                        });\n                        props.history.push('/login');\n                    }\n                    else{\n                        console.log(\"res status is : \")\n                        store.addNotification({\n                            message: t('login.tokenFail'),\n                            insert: \"top\",\n                            type: 'fail',\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 5000,\n                                onScreen: true\n                            }\n                        });\n                    }\n                }))\n                .catch((\n                    error=>{console.log(error)}\n                    ))\n                   \n            props.history.push('/login')\n        }\n        if (!mounted && props && props.match.params && props.match.params.tokenConf){\n            // console.log(\"r1\")\n            activeAccount();\n            setMounted(true);\n        }\n    }, [props, mounted, t]);\n\n    return null;\n}","\nimport React, { useState } from 'react';\nimport { Grow, Typography, TextField, Container, Grid, Link } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as API from \"../../../_actions/user_actions\";\nimport { store } from \"react-notifications-component\";\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button\n} from 'antd';\nconst useStyles = makeStyles(theme => ({\n    loginContainer: {\n        padding: '9em 0 0 0',\n        margin: 'auto',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: theme.spacing(5),\n    },\n    login: {\n        marginTop: 'auto',\n        backgroundColor: 'rgba(250, 250, 250, 0.9)',\n        borderRadius: '12px',\n        padding: theme.spacing(3),\n        //  boxShadow: '1px 1px 42px rgba(238, 28, 115,0.2);',\n    },\n    signupButton: {\n        // background: 'linear-gradient(-317deg, #207af4 -25%, #0b1123, #0b1123 70%, #f02678 160% )',\n        margin: theme.spacing(3, 0, 3, 0),\n        borderRadius: '10px !important',\n        color: 'white',\n    },\n    textfield: {\n        '& fieldset': {\n            borderRadius: '10px !important',\n        },\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    }\n}));\n\n\nexport default function ForgotPassword(props) {\n    const classes = useStyles();\n    const [mounted, setMounted] = useState(true);\n    const [validationErrors, setValidationErrors] = React.useState({ err_email: false });\n    const [value, setValue] = React.useState({ email: '' });\n    const { t } = useTranslation();\n\n    function validateEmail(email) {\n        // eslint-disable-next-line\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        return re.test(String(email).toLowerCase());\n    }\n\n    const handleRedirectSignup = (e) => {\n        setMounted(!mounted);\n        e.preventDefault();\n        props.history.push('/register');\n    };\n\n    const handleChange = (event) => {\n        const { err_email } = validationErrors;\n        if (event.target.id === \"email\" && err_email)\n            setValidationErrors({ ...validationErrors, err_email: false });\n        setValue({ ...value, [event.target.id]: event.target.value });\n    };\n\n    const handleMailSend = (e) => {\n        e.preventDefault();\n        if (value && value.email && value.email.length && !validateEmail(value.email)) {\n            setValidationErrors({ err_email: t('reset.resetMailErr') });\n        }\n        else if (validateEmail(value.email) && !validationErrors.err_email) {\n            API.sendResetMail(value.email)\n                .then(res => {\n                    if (res.status === 200)\n                        store.addNotification({\n                            message: t(\"reset.resetMail\"),\n                            insert: \"top\",\n                            type: 'success',\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 5000,\n                                onScreen: true\n                            }\n                        });\n                    props.history.push('/login');\n                })\n                .catch(() => { setValidationErrors({ err_email: t('reset.resetMailErr') }) })\n        }\n        else\n            setValidationErrors({ err_mail: t(\"reset.resetMailErr\") });\n    };\n\n    return (\n        <div className=\"loginbg\">\n            <div className={classes.loginContainer}>\n                <Grow in={mounted}>\n                    <Container className={classes.login} component=\"main\" maxWidth=\"xs\">\n                        {/* <CssBaseline /> */}\n                        <div className={classes.paper}>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                {t(\"reset.forgotPassword\")}\n                            </Typography>\n                            <form className={classes.form} onSubmit={handleMailSend} noValidate>\n                                <Grid alignContent=\"center\" alignItems=\"center\" container spacing={2}>\n                                    <Grid item xs={12}>\n                                        <TextField\n                                            variant=\"outlined\"\n                                            required\n                                            fullWidth\n                                            id=\"email\"\n                                            label={t(\"reset.email\")}\n                                            name=\"email\"\n                                            autoComplete=\"email\"\n                                            className={classes.textfield}\n                                            value={value.email || ''}\n                                            error={Boolean(validationErrors.err_email)}\n                                            helperText={validationErrors.err_email}\n                                            onChange={handleChange}\n                                        />\n                                    </Grid>\n                                </Grid>\n                                <Button\n                                    size=\"large\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    type=\"primary\"\n                                    className={classes.signupButton}\n                                    onClick={handleMailSend}\n                                >\n                                    {t(\"reset.sendMail\")}\n                                </Button>\n                                <Grid container justify=\"flex-end\">\n                                    <Grid item>\n                                        <Link onClick={handleRedirectSignup} href=\"#\" variant=\"body2\">\n                                            {t(\"reset.account\")}\n                                        </Link>\n                                    </Grid>\n                                </Grid>\n                            </form>\n                        </div>\n                    </Container>\n                </Grow>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport {Grow, Typography, TextField, Container, Grid, Input } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport * as API from \"../../../_actions/user_actions\";\nimport {store} from \"react-notifications-component\";\nimport { useTranslation } from 'react-i18next';\nimport {\n    Button,\n  } from 'antd';\n// Style\nconst useStyles = makeStyles(theme => ({\n    forgotContainer: {\n        padding: '9em 0 0 0',\n        margin: 'auto',\n    },\n    paper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingTop: theme.spacing(5),\n    },\n    login: {\n        marginTop: 'auto',\n        background: 'rgba(250, 250, 250, 0.9)',\n        borderRadius: '12px',\n        padding: theme.spacing(3),\n        \n    },\n    signupButton: {\n        margin: theme.spacing(3, 0, 3, 0),\n        borderRadius: '10px !important',\n        color: 'white',\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    }\n}));\n\n\nexport default function ResetPassword(props) {\n    const classes = useStyles();\n    const { t } = useTranslation();\n\n    function validatePassword(password) {\n        var re = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n        return re.test(password);\n    }\n\n    const [validationErrors, setValidationErrors] = React.useState({ err_password: false, err_password_confirm : false });\n    const [fieldValue, setTextFieldsValues] = React.useState({ password: '', password_confirm: ''})\n\n    /* Input onChange -> Update value, store it in state(setTextFieldsValues), if user has a previous warnings then dismiss it with false */\n    const handleChange = (event) => {\n        const { err_password, err_password_confirm } = validationErrors;\n        if (event.target.id === \"password\" && err_password)\n            setValidationErrors({...validationErrors, err_password: false});\n        if (event.target.id === \"password_confirm\" && err_password_confirm)\n            setValidationErrors({...validationErrors, err_password: false});\n        setTextFieldsValues({...fieldValue, [event.target.id]: event.target.value });\n    };\n\n    const handleResetClicked = (e) => {\n        e.preventDefault();\n        const errors = { password: false, password_confirm: false }\n        if (!fieldValue.password.length)\n            errors.password =  t('reset.validUsername');\n        if (fieldValue.password !== fieldValue.password_confirm)\n            errors.password_confirm = t('reset.passwordReq');\n        else if (!validatePassword(fieldValue.password))\n            errors.password = t('reset.passwordweak');\n            setValidationErrors({ err_password: errors.password, err_password_confirm: errors.password_confirm});\n        if (!errors.password && !errors.password_confirm) {\n            API.resetPassword(props.match.params.tokenConf, fieldValue.password, fieldValue.password_confirm)\n                .then(response => {\n                    if (response.status === 200){\n                        store.addNotification({\n                            message: t('reset.resetSuccess'),\n                            insert: \"top\",\n                            type: 'success',\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 5000,\n                                onScreen: true\n                            }\n                        });\n                        console.log(\"GOOD\")\n                          props.history.push('/login')\n                    }\n                })\n                .catch(err => {\n                    if (err.response && err.response.data && err.response.data.errors)\n                        setValidationErrors({err_password: err.response.data.errors.password, err_password_confirm: err.response.data.errors.password_confirm,});\n                    else {\n                        store.addNotification({\n                            message: t('reset.resetFail'),\n                            insert: \"top\",\n                            type: 'danger',\n                            container: \"top-right\",\n                            animationIn: [\"animated\", \"fadeIn\"],\n                            animationOut: [\"animated\", \"fadeOut\"],\n                            dismiss: {\n                                duration: 5000,\n                                onScreen: true\n                            }\n                        });console.log(\"NOT GOOD\")\n                          props.history.push('/login')\n                    }\n                });\n        }\n    };\n\n    return (\n        <div className=\"loginbg\">\n        <div className={classes.forgotContainer}>\n            <Grow in={true}>\n                <Container className={classes.login} component=\"main\" maxWidth=\"xs\">\n                    <div className={classes.paper}>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            {t('reset.passwordReset')}\n                        </Typography>\n                        <form className={classes.form} onSubmit={handleResetClicked} noValidate>\n                        <Input type=\"text\" name=\"username\" value=\"\" autoComplete=\"username\" style={{ display: 'none' }} />\n                            <Grid alignContent=\"center\" alignItems=\"center\" container spacing={2}>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        onChange={handleChange}\n                                        helperText={validationErrors.err_password}\n                                        error={Boolean(validationErrors.err_password)}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth={true}\n                                        name=\"password\"\n                                        label={t('reset.password')}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        autoComplete=\"current-password\"\n                                    />\n                                </Grid>\n                                <Grid item xs={12}>\n                                    <TextField\n                                        value={fieldValue.password_confirm || ''}\n                                        helperText={validationErrors.err_password_confirm}\n                                        error={Boolean(validationErrors.err_password_confirm)}\n                                        onChange={handleChange}\n                                        variant=\"outlined\"\n                                        required\n                                        fullWidth={true}\n                                        name=\"password_confirm\"\n                                        label={t('reset.cpassword')}\n                                        type=\"password\"\n                                        id=\"password_confirm\"\n                                        autoComplete=\"current-password\"\n                                        className={classes.textfield}\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Button\n                                size=\"large\"\n                                variant=\"contained\"\n                                type=\"primary\"\n                                color=\"primary\"\n                                className={classes.signupButton}\n                                onClick={handleResetClicked}\n                            >\n                                {t('reset.resetButton')}\n                            </Button>\n                        </form>\n                    </div>\n                </Container>\n            </Grow>\n        </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from 'react'\nimport axios from 'axios';\nimport { useTranslation } from 'react-i18next';\nimport { Card, Avatar, Col, Row, Typography } from 'antd';\nimport { useHistory } from 'react-router-dom';\nconst { Title } = Typography;\nconst { Meta } = Card;\n\nfunction UsersPage() {\n\n    const { t } = useTranslation();\n    const [UserList, setUserList] = useState([])\n    const [Loading, setLoading] = useState(true)\n    const history = useHistory();\n\n    useEffect(() => {\n        axios.get('/api/users/getUsers')\n            .then(response => {\n                if (response.data.success) {\n                    setUserList(response.data.users)\n                    setLoading(false)\n                } else {\n                    history.push(\"/login\");\n                }\n            })\n    }, [history])\n\n    const renderCards = UserList.map((user, index) => {\n        return <Col lg={6} md={8} xs={24} key={user._id}>\n            <Card\n                hoverable\n                style={{ width: 240, display: 'flex', justifyContent: 'center', alignItems: 'center' }}\n                cover={<Avatar src={user.image} size={84} />}\n            >\n                <Meta title={user.username} />\n                <br />\n                <span>{user.firstName} {user.lastName}</span>\n            </Card>\n        </Col>\n    })\n\n    return (\n        <div style={{ width: '85%', margin: '3rem auto' }}>\n            <Title level={2}>{t(\"users.usersTitle\")}</Title>\n            <hr />\n            <br />\n            {!Loading &&\n            <Row gutter={[16, 16]}>\n                {renderCards}\n            </Row>\n            }\n        </div>\n    )\n}\n\nexport default UsersPage","import React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nconst NotFound = () => {\n    const { t } = useTranslation();\n    return (\n        <div className=\"not_found_container\">\n            <div>{t('notFound.sorry')}</div>\n            <div>\n            {t('notFound.notfound')}\n            </div>\n        </div>\n    );\n};\n\nexport default NotFound;","import React from 'react';\nimport './i18n';\nimport './App.css';\nimport { Suspense } from 'react';\nimport { Route, Switch } from \"react-router-dom\";\nimport Auth from \"../hoc/auth\";\nimport { useTranslation } from 'react-i18next';\nimport Spinner from './views/LandingPage/Sections/Spinner';\nimport ReactNotification from \"react-notifications-component\";\nimport 'react-notifications-component/dist/theme.css'\n// pages for this product\nimport LandingPage from \"./views/LandingPage/LandingPage.js\";\nimport GenresPage from './views/GenresPage/GenresPage.js';\nimport LoginPage from \"./views/LoginPage/LoginPage.js\";\nimport RegisterPage from \"./views/RegisterPage/RegisterPage.js\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Footer from \"./views/Footer/Footer\";\nimport MovieDetail from \"./views/MovieDetail/MovieDetail\";\nimport FavoritePage from \"./views/FavoritePage/FavoritePage\";\nimport ProfilePage from \"./views/ProfilePage/ProfilePage\";\nimport Confirmation from \"./views/Confirmation/Confirmation\";\nimport ResPassword from \"./views/ResetPassword/ResetPassword\";\nimport Reset from \"./views/ResetPassword/Reset.js\";\nimport UsersPage from \"./views/UsersPage/UsersPage\";\nimport NotFound from \"./NotFound\";\n\nfunction App() {\n  const { t } = useTranslation();\n  return ( \n  \n    <Suspense fallback={t(<Spinner />)}>\n      <NavBar />\n      <div style={{ paddingTop: '69px', minHeight: 'calc(100vh - 80px)' }}>\n      <div className={\"notifications\"}> <ReactNotification /> </div>\n        <Switch>\n          <Route exact path=\"/\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/login\" component={Auth(LoginPage, false)} />\n          <Route exact path=\"/landing\" component={Auth(LandingPage, true)} />\n          <Route exact path='/landing/genre/:genreName/:genreId' component={Auth(GenresPage, true)} />\n          <Route exact path=\"/register\" component={Auth(RegisterPage, false)} />\n          <Route exact path=\"/movie/:movieId\" component={Auth(MovieDetail, true)} />\n          <Route exact path=\"/favorite\" component={Auth(FavoritePage, true)} />\n          <Route exact path=\"/profile\" component={Auth(ProfilePage, true)} />\n          <Route exact path=\"/users\" component={Auth(UsersPage, true)} />\n          <Route exact path=\"/forgot\" component={Auth(ResPassword, false)} />\n          <Route exact path=\"/confirmation/:tokenConf\" component={Auth(Confirmation, false)} />\n          <Route exact path=\"/confirmation/ResetPassword/Reset/:tokenConf\" component={Auth(Reset, false)}/>\n          <Route component={Auth(NotFound, null)}/>\n        </Switch>\n      </div>\n      <Footer />\n    </Suspense>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    UPDATE_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n\n\nexport default function foo(state = {}, action) {\n    switch (action.type) {\n        case REGISTER_USER:\n            return { ...state, register: action.payload }\n        case UPDATE_USER:\n            return { ...state, update: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return { ...state, userData: action.payload }\n        case LOGOUT_USER:\n            return { ...state }\n        default:\n            return state;\n    }\n}","import React, { Suspense } from 'react';\nimport './components/i18n';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport Spinner from './components/views/LandingPage/Sections/Spinner';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n  <Provider\n    store={createStoreWithMiddleware(\n      Reducer,\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    )}\n  >\n    <BrowserRouter>\n      <Suspense fallback={<Spinner />}>\n          <App />\n      </Suspense>\n    </BrowserRouter>\n  </Provider>\n  , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}